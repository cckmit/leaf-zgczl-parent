<?xml version="1.0" encoding="UTF-8"?>
<a:screen xmlns:a="http://www.leaf-framework.org/application" customizationenabled="true" dynamiccreateenabled="true">
    <a:init-procedure/>
    <a:view>
        <a:screen-include screen="modules/layout/flexible_UI.screen?layout_code=HLS025&amp;winid=${/parameter/@winid}"/>
        <script><![CDATA[window['HLS025_QUERY_LAYOUT_DYNAMIC_CLICK']=function(){
	for(var i=0;i<window['HLS025_layoutDataSetList'].length;i++){
		if($(window['HLS025_layoutDataSetList'][i]).queryurl&&$(window['HLS025_layoutDataSetList'][i]).submiturl){
			$(window['HLS025_layoutDataSetList'][i]).query();
		}
	}
};
window['HLS025_SAVE_LAYOUT_DYNAMIC_CLICK']=function(nextStep){
	var root_ds=$('HLS025_virtual_ds');
    if (root_ds.validate()) {
        var winid = 'hls_doc_get_layout_code_winid';
        var root_record = root_ds.getCurrentRecord();
        root_ds.setSubmitParameter('layout_code', 'HLS025');
        function on_layout_dynamic_before_save(){
        	root_ds.un('beforesubmit',on_layout_dynamic_before_save);
        	var flag = false;
        	for (var name in root_record.data) {
                if (root_record.data[name].data[0].ds instanceof $A.DataSet) {
                    var current_record = root_record.data[name].data[0].ds.getCurrentRecord();
                    flag = window['HLS025_on_layout_dynamic_before_submit'](root_record.data[name].data[0].ds, current_record);
                }
            }
        	return flag;
        }
        root_ds.on('beforesubmit',on_layout_dynamic_before_save);
        window['HLS025_LAYOUT_DYNAMIC_ROOT_DS_EXECUTE_FINALLY'](root_ds, root_record, nextStep, winid);
    }
};

window['HLS025_LAYOUT_DYNAMIC_ROOT_DS_EXECUTE_FINALLY']=function(ds, record, nextStep, winid){
	function ON_LAYOUT_DYNAMIC_INNER_SUBMITSUCCESS(ds, res) {
        ds.un('submitsuccess', ON_LAYOUT_DYNAMIC_INNER_SUBMITSUCCESS);
        window['HLS025_on_layout_dynamic_submitsuccess'](ds,record,res);
        if (typeof(nextStep) == 'function') {
            nextStep(ds);
        }
    }
    ds.on('submitsuccess', ON_LAYOUT_DYNAMIC_INNER_SUBMITSUCCESS);

    ds.submit();
};
window['HLS025_EXIT_LAYOUT_DYNAMIC_CLICK']=function(){
	if('hls_doc_get_layout_code_winid'){
    	$('hls_doc_get_layout_code_winid').close();
    }else{
    	 location.href = '/lxh_dev/welcome.screen';
         parent.shMenu('show');
    }
};
window['HLS025_all_parameters']={"layout_debugger_flag":"Y","enabled_flag":"Y","url_title":"","__parameter_parsed__":true,"brand_id":"21","winid":"hls_doc_get_layout_code_winid","usage_type":"","function_code":"HLS025","brand_code":"BENZ","calc_type":"","description":"奔驰","layout_code":"HLS025","function_usage":"MODIFY","maintain_type":"UPDATE"};

	
        //新增时调用(grid,table,gridBox)
            window['${/parameter/@bp_seq}${/parameter/@layout_code}_on_layout_dynamic_grid_add'] = function(ds, record, config_records, bp_seq) {
                record.set('brand_id','${/parameter/@brand_id}');
             };
var HLS025_layoutDataSetList=[];
var HLS025_rootDataSetList=[];
var HLS025_layoutDataSetObj={};
function GET_LOV_CASCADE(value) {
    if (Ext.isEmpty(value)) {
        return '';
    } else {
        return value;
    }
}
            
function SETOBJECTPARA(object, ds, field, para, record) {
    if (para) {
        if (object == 'LOV') {
            field.setLovPara(para, GET_LOV_CASCADE(record.get(para)));
        } else if (object == 'COMBOBOX') {
            ds.setQueryParameter(para, GET_LOV_CASCADE(record.get(para)));
        }
    }
}

function GET_CONFIG_COLUMN_NAME(name) {
    var query_name, length = name.length;
    if (name.substring(length - 2, length) == '_n') {
        query_name = name.substring(0, length - 2);
    } else {
        query_name = name;
    }
    return query_name;
}

function ON_COMMON_OBJECT_BEFORECOMMIT(object, record, lov_record){ 
	var display_name = object.binder.name,
        field = record.getField(display_name),
        mapping = field.get('mapping'),
        exists_flag = false;
    for (var name in lov_record.data) {
        exists_flag = false;
        for (var i = 0,
            mapping_length = mapping.length;i < mapping_length;i++) {
            if ((exists_flag = (name == mapping[i]['from']))) {
                break;
            }
        }
        if (!exists_flag) {
            mapping.push({
                from: name,
                to: name
            });
        }
    }
    field.setMapping(mapping);
}

function SET_CLEAR_LOVPARA_EMPTY(name, lov_cascade_para, record, config_record) {
    var validation_type = config_record.get('validation_type'),
        column_name = config_record.get('column_name');
    if (name == lov_cascade_para) {
        record.set(column_name, '');
        if (validation_type == 'LOV' || validation_type == 'LOV_C' || validation_type == 'TREE' || validation_type == 'TREE_C' || validation_type == 'COMBOBOX' || validation_type == 'COMBOBOX_C') {
            record.set(column_name + '_n', '');
        }
    }
}
window['HLS025_layoutDataSetList'].push('HLS025_F_BRAND_lov_getmapping_ds');
window['HLS025_layoutDataSetList'].push('HLS025_F_BRAND_con_layout_config_ds');
window['HLS025_rootDataSetList'].push('HLS025_F_BRAND_hls_car_brand_ds');
window['HLS025_layoutDataSetObj']['HLS025_F_BRAND_hls_car_brand_ds']='BRAND_ID';
window['HLS025_layoutDataSetList'].push('HLS025_F_BRAND_hls_car_brand_ds');
window['HLS025_F_BRAND_ON_FORM_OBJECT_FOCUS'] = function(object) {
    var config_ds = $('HLS025_F_BRAND_con_layout_config_ds'),
        name = GET_CONFIG_COLUMN_NAME(object.binder.name),
        display_name = object.binder.name,
        record = object.record || object.binder.ds.create();
    var config_record = config_ds.find('column_name', name);
    var lov_cascade_para1 = config_record.get('lov_cascade_para1'),
        lov_cascade_para2 = config_record.get('lov_cascade_para2'),
        lov_cascade_para3 = config_record.get('lov_cascade_para3'),
        field = record.getField(display_name);
    if (object instanceof $A.Lov) {
        if (config_record.get('validation_type') == 'LOV' || config_record.get('validation_type') == 'LOV_C'|| config_record.get('validation_type') == 'LOV_D'|| config_record.get('validation_type') == 'LOV_D_C') {
            field.setLovPara('column_name', name);
            field.setLovPara('tab_code', config_record.get('tab_code'));
            field.setLovPara('config_id', config_record.get('config_id'));
            field.setLovPara('layout_code', config_record.get('layout_code'));
        }
        SETOBJECTPARA('LOV', '', field, lov_cascade_para1, record);
        SETOBJECTPARA('LOV', '', field, lov_cascade_para2, record);
        SETOBJECTPARA('LOV', '', field, lov_cascade_para3, record);
    } else if (object instanceof $A.ComboBox) {
        var combobox_ds = object.optionDataSet;
        combobox_ds.setQueryParameter('column_name', name);
        combobox_ds.setQueryParameter('tab_code', config_record.get('tab_code'));
        combobox_ds.setQueryParameter('layout_code', config_record.get('layout_code'));
        SETOBJECTPARA('COMBOBOX', combobox_ds, field, lov_cascade_para1, record);
        SETOBJECTPARA('COMBOBOX', combobox_ds, field, lov_cascade_para2, record);
        SETOBJECTPARA('COMBOBOX', combobox_ds, field, lov_cascade_para3, record);
        combobox_ds.query();
    }
};

window['HLS025_F_BRAND_ON_LAYOUT_DYNAMIC_INNER_FORM_INIT'] = function(ds) {
    var head_record = ds.getCurrentRecord() || ds.create();
    head_record.set('bp_seq', '');
    var config_records = $('HLS025_F_BRAND_con_layout_config_ds').getAll();
    if (!window['HLS025_all_parameters']['BRAND_ID'.toLowerCase()]&&!window['HLS025_all_parameters']['brand_id'.toLowerCase()]&&'') {
        var default_value_ds = (parent == top ? self : parent)['$'](''),
            default_record = default_value_ds.getCurrentRecord();
        for (var name in head_record.data) {
            if (!Ext.isEmpty(default_record.get(name)) && name.indexOf('price_list') == '-1') {
                head_record.set(name, default_record.get(name));
            }
        }
    }
    if(''&&'brand_id' && !head_record.get('brand_id')){
    	var parent_ds=$('HLS025_F_BRAND__ds');
    	var parent_record = parent_ds.getCurrentRecord();
    	if(parent_record){
    		head_record.set('brand_id',parent_record.get('brand_id'));
    	}
    }
    for (var i = 0;i < config_records.length;i++) {
        var config_record = config_records[i],
            validation_type = config_record.get('validation_type'),
            column_name = config_record.get('column_name'),
            display_name = column_name + '_n';
        if (validation_type == 'LOV' || validation_type == 'LOV_C' || validation_type == 'TREE' || validation_type == 'TREE_C') {
            var documentMapping;
            if (config_record.get('lov_return_vcode') == 'Y') {
                documentMapping = [{
                    from: 'value_code',
                    to: column_name
                }, {
                    from: 'value_code',
                    to: column_name
                }];
                head_record.getField(column_name).setMapping(documentMapping);
            } else {
                documentMapping = [{
                    from: 'value_code',
                    to: column_name
                }, {
                    from: 'value_name',
                    to: display_name
                }];
                head_record.getField(display_name).setMapping(documentMapping);
            }
        } else if (validation_type == 'COMBOBOX' || validation_type == 'COMBOBOX_C') {
            var combobox_field;
            if (config_record.get('lov_return_vcode') == 'Y') {
                combobox_field = head_record.getField(column_name);
                combobox_field.setPropertity('displayfield', 'value_code');
            } else {
                combobox_field = head_record.getField(display_name);
                combobox_field.setPropertity('displayfield', 'value_name');
            }
        }
    }
    window['HLS025_on_layout_dynamic_form_add_and_load'](ds, head_record,config_records,'');
};

window['HLS025_F_BRAND_CON_FORM_PROCESSFUNCTION'] = function(datas) {
    for (var i = 0;i < datas.length;i++) {
        var temp = datas[i];
        for (var name in temp.data) {
            var temp_record = $('HLS025_F_BRAND_con_layout_config_ds').find('column_name', name);
            if (temp_record) {
                if (temp_record.get('validation_type') == 'NUMBERFIELD') {
                    temp.data[name] = isNaN(temp.data[name]) == true ? temp.data[name] : parseFloat(parseFloat(temp.data[name]).toFixed(temp_record.get('precision')));
                }
            }
        }
    }
    return datas;
};

window['HLS025_F_BRAND_ONREADY'] = function() {
    var base_ds=$('HLS025_F_BRAND_hls_car_brand_ds');
	if(!window['HLS025_all_parameters']['BRAND_ID'.toLowerCase()]&&!''){
		base_ds.create();
	}else{
	    base_ds.setQueryParameter('brand_id',window['HLS025_all_parameters']['brand_id']);
	    base_ds.query();
	    base_ds.on('load',function(){
	        if(!base_ds.getAll().length){
	            base_ds.create();
	        }
	    });
	}
};

window['HLS025_F_BRAND_CHILD_ONREADY'] = function() {
	if('hls_car_brand'&&''&&'HLS_CAR_BRAND'){
	    var base_ds=$('HLS025_F_BRAND_hls_car_brand_ds');
		var parent_ds=$('HLS025_F_BRAND__ds');
		if(!window['HLS025_all_parameters']['BRAND_ID'.toLowerCase()]&&!''){
			base_ds.create();
		}else{
			function base_ds_query(){
				base_ds.setQueryParameter('brand_id',parent_ds.getCurrentRecord().get('brand_id'));
			    base_ds.query();
			}
			function base_ds_check(){
				base_ds.un('load',base_ds_check);
				if(!base_ds.getAll().length){
			      	  base_ds.create(); 
		        }
			}
			function base_ds_ajax(){
				base_ds_query();
			    base_ds.on('load',base_ds_check);
			}
		    parent_ds.on('indexchange',function(ds,record){
		    	if(!record.isNew){
			    	base_ds_ajax();
			    }
		    });
		    if(parent_ds.getAll().length && !base_ds.getAll().length){
		    	base_ds_ajax();
		    }else if(!parent_ds.getAll().length && !base_ds.getAll().length){
		        base_ds.create();
		    }
		}
	}
};

window['HLS025_F_BRAND_ON_LAYOUT_DYNAMIC_INNER_UPDATE'] = function(ds, record, name, value, old_value) {
    window['HLS025_F_BRAND_ON_LAYOUT_DYNAMIC_INNER_CLEAR_LOVPARA'](ds, record, name, value, old_value);
    window['HLS025_F_BRAND_ON_LAYOUT_DYNAMIC_INNER_FIELD_JAVASCRIPT'](ds, record, name, value, old_value);
    window['HLS025_on_layout_dynamic_update'](ds, record, name, value, old_value,'');
};

window['HLS025_F_BRAND_ON_LAYOUT_DYNAMIC_INNER_CLEAR_LOVPARA'] = function(ds, record, name, value, old_value) {
    if (Ext.isEmpty(value)) {
        var query_name = GET_CONFIG_COLUMN_NAME(name),
            field = record.getField(name),
            config_records = $('HLS025_F_BRAND_con_layout_config_ds').getAll();
        var current_field_value;
        for (var i = 0;i < config_records.length;i++) {
            var config_record = config_records[i];
            var lov_cascade_para1 = config_record.get('lov_cascade_para1'),
                lov_cascade_para2 = config_record.get('lov_cascade_para2'),
                lov_cascade_para3 = config_record.get('lov_cascade_para3');
            SET_CLEAR_LOVPARA_EMPTY(query_name, lov_cascade_para1, record, config_record);
            SET_CLEAR_LOVPARA_EMPTY(query_name, lov_cascade_para2, record, config_record);
            SET_CLEAR_LOVPARA_EMPTY(query_name, lov_cascade_para3, record, config_record);
        }
        var current_field = record.getField(name),
            current_lovpara = current_field.get('lovpara'),
            validation_sql;
        if (current_lovpara) {
            validation_sql = current_lovpara['validation_sql'];
        }
        if (!value && validation_sql) {
            var current_loadpara_ds = $('HLS025_F_BRAND_lov_getmapping_ds');

            function on_lov_getmapping_load(load_ds) {
                var lov_records = load_ds.getAll();
                for (var j = 0;j < lov_records.length;j++) {
                    var lov_record = lov_records[j],
                        mapping = current_field.get('mapping'),
                        exists_flag = false,
                        lov_name = lov_record.data['name'].toLowerCase();
                    for (var i = 0,
                        mapping_length = mapping.length;i < mapping_length;i++) {
                        if ((exists_flag = (lov_name == mapping[i]['from']))) {
                            break;
                        }
                    }
                    if (!exists_flag) {
                        record.set(lov_name, '');
                    }
                    current_field.setMapping(mapping);
                }
                current_loadpara_ds.un('load', on_lov_getmapping_load);
                unlock_current_window();
            }
            for (var lov_para_name in current_lovpara) {
                current_loadpara_ds.setQueryParameter(lov_para_name, record.get(lov_para_name));
            }
            current_loadpara_ds.setQueryParameter('validation_sql', validation_sql);
            lock_current_window();
            current_loadpara_ds.on('load', on_lov_getmapping_load);
            current_loadpara_ds.query();
        }
    }
    for (var show_name in record.data) {
        var show_field = record.getField(show_name);
        var lovpara_field = show_field.get('lovpara');
        if (lovpara_field && lovpara_field[name]) {
            record.set(show_name, '');
            var save_name = GET_CONFIG_COLUMN_NAME(show_name);
            if (save_name != show_name) {
                record.set(save_name, '');
            }
        }
    }
};

window['HLS025_F_BRAND_ON_LAYOUT_DYNAMIC_INNER_FIELD_JAVASCRIPT'] = function(ds, record, name, value, old_value, fromLoad) {
    var config_ds = $('HLS025_F_BRAND_con_layout_config_ds');
    var config_record = config_ds.find('column_name', name);
    var parent_record='';
    var layout_code = 'HLS025',
        tab_code = 'F_BRAND';
    if ('F_BRAND'&& '') {
        parent_record = $('HLS025_F_BRAND__ds').getAt(0);
    }
    if (config_record && config_record.get('field_javascript')) {
        eval(config_record.get('field_javascript'));
    }
};

window['HLS025_ON_LAYOUT_DYNAMIC_INNER_SUBMITFAILED']=function(ds) {
	window['HLS025_on_layout_dynamic_submitfailed'](ds,'');
};

window['HLS025_F_BRAND_FIELD_LINK_RENDERER']=function(value,record,name) {
	var config_record = $('HLS025_F_BRAND_con_layout_config_ds').find('column_name', name);
	 if(config_record.get('validation_type') == 'BUTTON'){
	 	return window['HLS025_dynamic_button_renderer'](value, record, name,config_record,'');
	 }else{
     	return window['HLS025_dynamic_link_renderer'](value, record, name,config_record,'');
	 }
};
window['HLS025_F_BRAND_ON_LAYOUT_DYNAMIC_INNER_FORM_QUERY'] = function(ds, qpara) {
    window['HLS025_on_layout_dynamic_form_query'](ds, qpara,'');
};
window['HLS025_layoutDataSetList'].push('HLS025_G_SERIES_lov_getmapping_ds');
window['HLS025_layoutDataSetList'].push('HLS025_G_SERIES_con_layout_config_ds');
window['HLS025_layoutDataSetList'].push('HLS025_G_SERIES_hls_car_series_ds');
function HLS_FORMATMONEY(v, p) {
    return Aurora.formatNumber(v, p);
}

function HLS_FORMATMONEY_ZERO_FILL(v, p) {
    return Aurora.formatNumber(v, p).replace(/0*$/g, '').replace(/\.$/, '');
}

function ON_GRID_COMBOBOX_FOCUS(combobox) {
    if (!combobox.optionDataSet.isLoaded) {
        combobox.optionDataSet.isLoaded = true;
        combobox.optionDataSet.query();
    }
}

function sumFunction(datas, name) {
    var sum = 0;
    for (var i = 0;i < datas.length;i++) {
        var r = datas[i];
        var d = r.get(name);
        var n = parseFloat(d);
        if (!isNaN(n)) {
            sum = plus(sum, n);
        }
    }
    var total = (typeof(sum) == 'undefined' ? '' : parseFloat(sum));
    return '<font>' + Aurora.formatNumber(total) + '</font>';
}

window['HLS025_G_SERIES_CON_GRID_PROCESS'] = function(datas) {
    for (var i = 0;i < datas.length;i++) {
        var temp = datas[i];
        for (var name in temp.data) {
            var temp_record = $('HLS025_G_SERIES_con_layout_config_ds').find('column_name', name);
            if (temp_record) {
                if (temp_record.get('validation_type') == 'NUMBERFIELD') {
                    temp.data[name] = isNaN(temp.data[name]) == true ? temp.data[name] : parseFloat(parseFloat(temp.data[name]).toFixed(temp_record.get('precision')));
                }
            }
        }
    }
    return datas;
};
window['HLS025_G_SERIES_SEEDETAIL_COLUMN_LN'] = function(value, record, name) {
    var editor_record = $('HLS025_G_SERIES_con_layout_config_ds').find('column_name', name),
        precision = editor_record.get('precision'),
        validation_type = editor_record.get('validation_type');
    if ((validation_type == 'NUMBERFIELD' || validation_type == 'PERCENTFIELD') && !Ext.isEmpty(value)) {
        if (editor_record.get('allow_format') == 'TRUE') {
            if (precision) {
                if (editor_record.get('zero_fill') == 'TRUE') {
                    return HLS_FORMATMONEY(value, precision);
                } else {
                    return HLS_FORMATMONEY_ZERO_FILL(value, precision);
                }
            } else {
                return HLS_FORMATMONEY(value);
            }
        } else {
            if (precision && editor_record.get('allow_decimal') == 'TRUE') {
                if (editor_record.get('zero_fill') == 'TRUE') {
                    return parseFloat(value).toFixed(precision);
                } else {
                    return parseFloat(value).toFixed(precision).replace(/0*$/g, '').replace(/\.$/, '');
                }
            } else {
                if (editor_record.get('allow_decimal') == 'TRUE') {
                    return value;
                } else {
                    return parseFloat(parseFloat(value).toFixed(0));
                }
            }
        }
    } else if (validation_type == 'DATEPICKER') {
        return Aurora.formatDate(value);
    } else {
        return value;
    }
};
            
window['HLS025_G_SERIES_SEEDETAIL_LN_PICTURE'] = function(value, record, name) {
    var pic = window['HLS025_dynamic_pic_renderer'](record, name,'');
    if (pic) {
        return pic;
    } else {
        return '';
    }
};

window['HLS025_G_SERIES_RENDERER'] = function(value, record, name) {	
	 var config_record = $('HLS025_G_SERIES_con_layout_config_ds').find('column_name', name);
	 if(config_record.get('validation_type') == 'BUTTON'){
	 	return window['HLS025_dynamic_button_renderer'](value, record, name,config_record,'');
	 }else{
     	return window['HLS025_dynamic_link_renderer'](value, record, name,config_record,'');
	 }
};
window['HLS025_G_SERIES_GRID_QUERY'] = function() {
    $('HLS025_G_SERIES_hls_car_series_ds').query();
};
window['HLS025_G_SERIES_SEE_DETAIL_EDITOR'] = function(record, name) {
    name = GET_CONFIG_COLUMN_NAME(name);
    var config_record = $('HLS025_G_SERIES_con_layout_config_ds').find('column_name', name);
    if (config_record) {
        var editor = 'HLS025_G_SERIES_' + name + '_id';
        if (config_record.get('readonly_input_mode')=='TRUE') {
            return '';
        }
        if (!record.isNew && config_record.get('input_mode') == 'REQUIRED_ONLY_ADD') {
            return '';
        } else {
            return editor;
        }
    }else{
    	return '';
    }
};
window['HLS025_G_SERIES_ON_GRID_OBJECT_FOCUS'] = function(object) {
    var config_ds = $('HLS025_G_SERIES_con_layout_config_ds'),
        name = GET_CONFIG_COLUMN_NAME(object.binder.name),
        display_name = object.binder.name,
        record = object.record || object.binder.ds.create();
    var config_record = config_ds.find('column_name', name);
    var lov_cascade_para1 = config_record.get('lov_cascade_para1'),
        lov_cascade_para2 = config_record.get('lov_cascade_para2'),
        lov_cascade_para3 = config_record.get('lov_cascade_para3'),
        field = record.getField(display_name);
    if (object instanceof $A.Lov) {
        if (config_record.get('validation_type') == 'LOV' || config_record.get('validation_type') == 'LOV_C'|| config_record.get('validation_type') == 'LOV_D'|| config_record.get('validation_type') == 'LOV_D_C') {
            field.setLovPara('column_name', name);
            field.setLovPara('tab_code', config_record.get('tab_code'));
            field.setLovPara('config_id', config_record.get('config_id'));
            field.setLovPara('layout_code', config_record.get('layout_code'));
        }
        SETOBJECTPARA('LOV', '', field, lov_cascade_para1, record);
        SETOBJECTPARA('LOV', '', field, lov_cascade_para2, record);
        SETOBJECTPARA('LOV', '', field, lov_cascade_para3, record);
    } else if (object instanceof $A.ComboBox) {
        var combobox_ds = object.optionDataSet;
        combobox_ds.setQueryParameter('column_name', name);
        combobox_ds.setQueryParameter('tab_code', config_record.get('tab_code'));
        combobox_ds.setQueryParameter('layout_code', config_record.get('layout_code'));
        SETOBJECTPARA('COMBOBOX', combobox_ds, field, lov_cascade_para1, record);
        SETOBJECTPARA('COMBOBOX', combobox_ds, field, lov_cascade_para2, record);
        SETOBJECTPARA('COMBOBOX', combobox_ds, field, lov_cascade_para3, record);
        combobox_ds.query();
    }
};

window['HLS025_G_SERIES_CHILD_ONREADY'] = function() {
    if('hls_car_series'&&'hls_car_brand'&&'HLS_CAR_SERIES'){
	    var base_ds = $('HLS025_G_SERIES_hls_car_series_ds');
	    var parent_ds = $('HLS025_F_BRAND_hls_car_brand_ds');
	   	function base_ds_query(){
	   		base_ds.setQueryParameter('brand_id', parent_ds.getCurrentRecord().get('brand_id'));
	        base_ds.query();
	   	}
	    parent_ds.on('indexchange', function(ds,record) {
	    	if(!record.isNew){
	        	base_ds_query();
	        }
	    });
	    if(parent_ds.getAll().length && parent_ds.getCurrentRecord() && !parent_ds.getCurrentRecord().isNew){
	    	base_ds_query();
	    }
    }
};

window['HLS025_G_SERIES_ONREADY'] = function() {
    var base_ds = $('HLS025_G_SERIES_hls_car_series_ds');
        base_ds.query();
};

window['HLS025_G_SERIES_ON_LAYOUT_DYNAMIC_INNER_GRID_ADD'] = function(ds) {
    var line_record = ds.getCurrentRecord(),
        parent_table_tab_code = 'F_BRAND',
        parent_table = 'hls_car_brand',
        parent_base_table_pk = 'brand_id';
    var config_records = $('HLS025_G_SERIES_con_layout_config_ds').getAll();
	var parent_ds_id = 'HLS025_'+ parent_table_tab_code + '_' + parent_table + '_ds';
	var head_record = '';
    if(parent_table && $A.CmpManager.get(parent_ds_id)){
	    head_record = $(parent_ds_id).getCurrentRecord();
	    if (head_record&&head_record.get(parent_base_table_pk)) {
	        line_record.set(parent_base_table_pk, head_record.get(parent_base_table_pk));
	        if ('hls_car_series'.toUpperCase() == 'PRJ_QUOTATION') {
	            line_record.set('document_id', head_record.get(parent_base_table_pk));
	        }
	    }
    }
    line_record.set('document_category', '');
    line_record.set('bp_seq', '');
    for (var i = 0;i < config_records.length;i++) {
        var config_record = config_records[i],
            validation_type = config_record.get('validation_type'),
            column_name = config_record.get('column_name'),
            display_name = config_record.get('column_name') + '_n';
        if (head_record && config_record.get('copy_from_parent_tab') == 'Y') {
            line_record.set(column_name, head_record.get(column_name));
            line_record.set(display_name, head_record.get(display_name));
        }
        if (validation_type == 'LOV' || validation_type == 'LOV_C' || validation_type == 'TREE' || validation_type == 'TREE_C') {
            var documentMapping;
            if (config_record.get('lov_return_vcode') == 'Y') {
                documentMapping = [{
                    from: 'value_code',
                    to: column_name
                }, {
                    from: 'value_code',
                    to: column_name
                }];
                line_record.getField(column_name).setMapping(documentMapping);
            } else {
                documentMapping = [{
                    from: 'value_code',
                    to: column_name
                }, {
                    from: 'value_name',
                    to: display_name
                }];
                line_record.getField(display_name).setMapping(documentMapping);
            }
        } else if (validation_type == 'COMBOBOX' || validation_type == 'COMBOBOX_C') {
            var combobox_field;
            var combobox_documentmapping;
            if (config_record.get('lov_return_vcode') == 'Y') {
                combobox_field = line_record.getField(column_name);
                combobox_field.setPropertity('displayfield', 'value_code');
                line_record.getField(column_name).setMapping(combobox_documentmapping);
            } else {
                combobox_field = line_record.getField(display_name);
                combobox_field.setPropertity('displayfield', 'value_name');
                line_record.getField(display_name).setMapping(combobox_documentmapping);
            }
        }
    }
    window['HLS025_on_layout_dynamic_grid_add'](ds, line_record , config_records,'');
};
window['HLS025_G_SERIES_ON_LAYOUT_DYNAMIC_INNER_GRID_LOAD'] = function(ds) {
    var records = ds.getAll();
    var config_records = $('HLS025_G_SERIES_con_layout_config_ds').getAll();
    if (records.length) {
        for (var i = 0;i < records.length;i++) {
            var line_record = records[i];
            for (var j = 0;j < config_records.length;j++) {
                var config_record = config_records[j],
                    validation_type = config_record.get('validation_type'),
                    column_name = config_record.get('column_name'),
                    display_name = config_record.get('column_name') + '_n';
                if (validation_type == 'LOV' || validation_type == 'LOV_C' || validation_type == 'TREE' || validation_type == 'TREE_C') {
                    var documentMapping;
                    if (config_record.get('lov_return_vcode') == 'Y') {
                        documentMapping = [{
                            from: 'value_code',
                            to: column_name
                        }, {
                            from: 'value_code',
                            to: column_name
                        }];
                        line_record.getField(column_name).setMapping(documentMapping);
                    } else {
                        documentMapping = [{
                            from: 'value_code',
                            to: column_name
                        }, {
                            from: 'value_name',
                            to: display_name
                        }];
                        line_record.getField(display_name).setMapping(documentMapping);
                    }
                } else if (validation_type == 'COMBOBOX' || validation_type == 'COMBOBOX_C') {
                    var combobox_field;
                    var combobox_documentmapping;
                    if (config_record.get('lov_return_vcode') == 'Y') {
                        combobox_field = line_record.getField(column_name);
                        combobox_field.setPropertity('displayfield', 'value_code');
                    } else {
                        combobox_field = line_record.getField(display_name);
                        combobox_field.setPropertity('displayfield', 'value_name');
                    }
                }
            }
            window['HLS025_on_layout_dynamic_grid_load'](ds, line_record,config_records,'');
        }
    }else{
    	window['HLS025_on_layout_dynamic_grid_load'](ds, '',config_records,'');
    }
};
window['HLS025_G_SERIES_ON_LAYOUT_DYNAMIC_INNER_GRID_INDEXCHANGE'] = function(ds,record) {
	var form_ds_id = 'HLS025__hls_car_series_ds';
    if ($A.CmpManager.get(form_ds_id)) {
        var form_ds = $(form_ds_id);
        if (record.get('SERIES_ID'.toLowerCase())) {
            form_ds.setQueryParameter('SERIES_ID'.toLowerCase(), record.get('SERIES_ID'.toLowerCase()));
            form_ds.query();
        }
    }
};
window['HLS025_G_SERIES_ON_LAYOUT_DYNAMIC_INNER_UPDATE'] = function(ds, record, name, value, old_value) {
    window['HLS025_G_SERIES_ON_LAYOUT_DYNAMIC_INNER_CLEAR_LOVPARA'](ds, record, name, value, old_value);
    window['HLS025_G_SERIES_ON_LAYOUT_DYNAMIC_INNER_FIELD_JAVASCRIPT'](ds, record, name, value, old_value);
    window['HLS025_on_layout_dynamic_update'](ds, record, name, value, old_value,'');
};

window['HLS025_G_SERIES_ON_LAYOUT_DYNAMIC_INNER_CLEAR_LOVPARA'] = function(ds, record, name, value, old_value) {
    if (Ext.isEmpty(value)) {
        var query_name = GET_CONFIG_COLUMN_NAME(name),
            field = record.getField(name),
            config_records = $('HLS025_G_SERIES_con_layout_config_ds').getAll();
        var current_field_value;
        for (var i = 0;i < config_records.length;i++) {
            var config_record = config_records[i];
            var lov_cascade_para1 = config_record.get('lov_cascade_para1'),
                lov_cascade_para2 = config_record.get('lov_cascade_para2'),
                lov_cascade_para3 = config_record.get('lov_cascade_para3');
            SET_CLEAR_LOVPARA_EMPTY(query_name, lov_cascade_para1, record, config_record);
            SET_CLEAR_LOVPARA_EMPTY(query_name, lov_cascade_para2, record, config_record);
            SET_CLEAR_LOVPARA_EMPTY(query_name, lov_cascade_para3, record, config_record);
        }
        var current_field = record.getField(name),
            current_lovpara = current_field.get('lovpara'),
            validation_sql;
        if (current_lovpara) {
            validation_sql = current_lovpara['validation_sql'];
        }
        if (!value && validation_sql) {
            var current_loadpara_ds = $('HLS025_G_SERIES_lov_getmapping_ds');

            function on_lov_getmapping_load(load_ds) {
                var lov_records = load_ds.getAll();
                for (var j = 0;j < lov_records.length;j++) {
                    var lov_record = lov_records[j],
                        mapping = current_field.get('mapping'),
                        exists_flag = false,
                        lov_name = lov_record.data['name'].toLowerCase();
                    for (var i = 0,
                        mapping_length = mapping.length;i < mapping_length;i++) {
                        if ((exists_flag = (lov_name == mapping[i]['from']))) {
                            break;
                        }
                    }
                    if (!exists_flag) {
                        record.set(lov_name, '');
                    }
                    current_field.setMapping(mapping);
                }
                current_loadpara_ds.un('load', on_lov_getmapping_load);
                unlock_current_window();
            }
            for (var lov_para_name in current_lovpara) {
                current_loadpara_ds.setQueryParameter(lov_para_name, record.get(lov_para_name));
            }
            current_loadpara_ds.setQueryParameter('validation_sql', validation_sql);
            lock_current_window();
            current_loadpara_ds.on('load', on_lov_getmapping_load);
            current_loadpara_ds.query();
        }
    }
    for (var show_name in record.data) {
        var show_field = record.getField(show_name);
        var lovpara_field = show_field.get('lovpara');
        if (lovpara_field && lovpara_field[name]) {
            record.set(show_name, '');
            var save_name = GET_CONFIG_COLUMN_NAME(show_name);
            if (save_name != show_name) {
                record.set(save_name, '');
            }
        }
    }
};

window['HLS025_G_SERIES_ON_LAYOUT_DYNAMIC_INNER_FIELD_JAVASCRIPT'] = function(ds, record, name, value, old_value, fromLoad) {
    var config_ds = $('HLS025_G_SERIES_con_layout_config_ds');
    var config_record = config_ds.find('column_name', name);
    var parent_record='';
    var layout_code = 'HLS025',
        tab_code = 'G_SERIES';
    if ('F_BRAND'&&'hls_car_brand') {
        parent_record = $('HLS025_F_BRAND_hls_car_brand_ds').getAt(0);
    }
    if (config_record && config_record.get('field_javascript')) {
        eval(config_record.get('field_javascript'));
    }
};

window['HLS025_G_SERIES_ON_LAYOUT_DYNAMIC_INNER_GRID_QUERY'] = function(ds, qpara) {
    window['HLS025_on_layout_dynamic_grid_query'](ds, qpara,'');
};
window['HLS025_layoutDataSetList'].push('HLS025_G_MODEL_lov_getmapping_ds');
window['HLS025_layoutDataSetList'].push('HLS025_G_MODEL_con_layout_config_ds');
window['HLS025_layoutDataSetList'].push('HLS025_G_MODEL_hls_car_model_ds');
function HLS_FORMATMONEY(v, p) {
    return Aurora.formatNumber(v, p);
}

function HLS_FORMATMONEY_ZERO_FILL(v, p) {
    return Aurora.formatNumber(v, p).replace(/0*$/g, '').replace(/\.$/, '');
}

function ON_GRID_COMBOBOX_FOCUS(combobox) {
    if (!combobox.optionDataSet.isLoaded) {
        combobox.optionDataSet.isLoaded = true;
        combobox.optionDataSet.query();
    }
}

function sumFunction(datas, name) {
    var sum = 0;
    for (var i = 0;i < datas.length;i++) {
        var r = datas[i];
        var d = r.get(name);
        var n = parseFloat(d);
        if (!isNaN(n)) {
            sum = plus(sum, n);
        }
    }
    var total = (typeof(sum) == 'undefined' ? '' : parseFloat(sum));
    return '<font>' + Aurora.formatNumber(total) + '</font>';
}

window['HLS025_G_MODEL_CON_GRID_PROCESS'] = function(datas) {
    for (var i = 0;i < datas.length;i++) {
        var temp = datas[i];
        for (var name in temp.data) {
            var temp_record = $('HLS025_G_MODEL_con_layout_config_ds').find('column_name', name);
            if (temp_record) {
                if (temp_record.get('validation_type') == 'NUMBERFIELD') {
                    temp.data[name] = isNaN(temp.data[name]) == true ? temp.data[name] : parseFloat(parseFloat(temp.data[name]).toFixed(temp_record.get('precision')));
                }
            }
        }
    }
    return datas;
};
window['HLS025_G_MODEL_SEEDETAIL_COLUMN_LN'] = function(value, record, name) {
    var editor_record = $('HLS025_G_MODEL_con_layout_config_ds').find('column_name', name),
        precision = editor_record.get('precision'),
        validation_type = editor_record.get('validation_type');
    if ((validation_type == 'NUMBERFIELD' || validation_type == 'PERCENTFIELD') && !Ext.isEmpty(value)) {
        if (editor_record.get('allow_format') == 'TRUE') {
            if (precision) {
                if (editor_record.get('zero_fill') == 'TRUE') {
                    return HLS_FORMATMONEY(value, precision);
                } else {
                    return HLS_FORMATMONEY_ZERO_FILL(value, precision);
                }
            } else {
                return HLS_FORMATMONEY(value);
            }
        } else {
            if (precision && editor_record.get('allow_decimal') == 'TRUE') {
                if (editor_record.get('zero_fill') == 'TRUE') {
                    return parseFloat(value).toFixed(precision);
                } else {
                    return parseFloat(value).toFixed(precision).replace(/0*$/g, '').replace(/\.$/, '');
                }
            } else {
                if (editor_record.get('allow_decimal') == 'TRUE') {
                    return value;
                } else {
                    return parseFloat(parseFloat(value).toFixed(0));
                }
            }
        }
    } else if (validation_type == 'DATEPICKER') {
        return Aurora.formatDate(value);
    } else {
        return value;
    }
};
            
window['HLS025_G_MODEL_SEEDETAIL_LN_PICTURE'] = function(value, record, name) {
    var pic = window['HLS025_dynamic_pic_renderer'](record, name,'');
    if (pic) {
        return pic;
    } else {
        return '';
    }
};

window['HLS025_G_MODEL_RENDERER'] = function(value, record, name) {	
	 var config_record = $('HLS025_G_MODEL_con_layout_config_ds').find('column_name', name);
	 if(config_record.get('validation_type') == 'BUTTON'){
	 	return window['HLS025_dynamic_button_renderer'](value, record, name,config_record,'');
	 }else{
     	return window['HLS025_dynamic_link_renderer'](value, record, name,config_record,'');
	 }
};
window['HLS025_G_MODEL_GRID_QUERY'] = function() {
    $('HLS025_G_MODEL_hls_car_model_ds').query();
};
window['HLS025_G_MODEL_SEE_DETAIL_EDITOR'] = function(record, name) {
    name = GET_CONFIG_COLUMN_NAME(name);
    var config_record = $('HLS025_G_MODEL_con_layout_config_ds').find('column_name', name);
    if (config_record) {
        var editor = 'HLS025_G_MODEL_' + name + '_id';
        if (config_record.get('readonly_input_mode')=='TRUE') {
            return '';
        }
        if (!record.isNew && config_record.get('input_mode') == 'REQUIRED_ONLY_ADD') {
            return '';
        } else {
            return editor;
        }
    }else{
    	return '';
    }
};
window['HLS025_G_MODEL_ON_GRID_OBJECT_FOCUS'] = function(object) {
    var config_ds = $('HLS025_G_MODEL_con_layout_config_ds'),
        name = GET_CONFIG_COLUMN_NAME(object.binder.name),
        display_name = object.binder.name,
        record = object.record || object.binder.ds.create();
    var config_record = config_ds.find('column_name', name);
    var lov_cascade_para1 = config_record.get('lov_cascade_para1'),
        lov_cascade_para2 = config_record.get('lov_cascade_para2'),
        lov_cascade_para3 = config_record.get('lov_cascade_para3'),
        field = record.getField(display_name);
    if (object instanceof $A.Lov) {
        if (config_record.get('validation_type') == 'LOV' || config_record.get('validation_type') == 'LOV_C'|| config_record.get('validation_type') == 'LOV_D'|| config_record.get('validation_type') == 'LOV_D_C') {
            field.setLovPara('column_name', name);
            field.setLovPara('tab_code', config_record.get('tab_code'));
            field.setLovPara('config_id', config_record.get('config_id'));
            field.setLovPara('layout_code', config_record.get('layout_code'));
        }
        SETOBJECTPARA('LOV', '', field, lov_cascade_para1, record);
        SETOBJECTPARA('LOV', '', field, lov_cascade_para2, record);
        SETOBJECTPARA('LOV', '', field, lov_cascade_para3, record);
    } else if (object instanceof $A.ComboBox) {
        var combobox_ds = object.optionDataSet;
        combobox_ds.setQueryParameter('column_name', name);
        combobox_ds.setQueryParameter('tab_code', config_record.get('tab_code'));
        combobox_ds.setQueryParameter('layout_code', config_record.get('layout_code'));
        SETOBJECTPARA('COMBOBOX', combobox_ds, field, lov_cascade_para1, record);
        SETOBJECTPARA('COMBOBOX', combobox_ds, field, lov_cascade_para2, record);
        SETOBJECTPARA('COMBOBOX', combobox_ds, field, lov_cascade_para3, record);
        combobox_ds.query();
    }
};

window['HLS025_G_MODEL_CHILD_ONREADY'] = function() {
    if('hls_car_model'&&'hls_car_series'&&'HLS_CAR_MODEL'){
	    var base_ds = $('HLS025_G_MODEL_hls_car_model_ds');
	    var parent_ds = $('HLS025_G_SERIES_hls_car_series_ds');
	   	function base_ds_query(){
	   		base_ds.setQueryParameter('series_id', parent_ds.getCurrentRecord().get('series_id'));
	        base_ds.query();
	   	}
	    parent_ds.on('indexchange', function(ds,record) {
	    	if(!record.isNew){
	        	base_ds_query();
	        }
	    });
	    if(parent_ds.getAll().length && parent_ds.getCurrentRecord() && !parent_ds.getCurrentRecord().isNew){
	    	base_ds_query();
	    }
    }
};

window['HLS025_G_MODEL_ONREADY'] = function() {
    var base_ds = $('HLS025_G_MODEL_hls_car_model_ds');
        base_ds.query();
};

window['HLS025_G_MODEL_ON_LAYOUT_DYNAMIC_INNER_GRID_ADD'] = function(ds) {
    var line_record = ds.getCurrentRecord(),
        parent_table_tab_code = 'G_SERIES',
        parent_table = 'hls_car_series',
        parent_base_table_pk = 'series_id';
    var config_records = $('HLS025_G_MODEL_con_layout_config_ds').getAll();
	var parent_ds_id = 'HLS025_'+ parent_table_tab_code + '_' + parent_table + '_ds';
	var head_record = '';
    if(parent_table && $A.CmpManager.get(parent_ds_id)){
	    head_record = $(parent_ds_id).getCurrentRecord();
	    if (head_record&&head_record.get(parent_base_table_pk)) {
	        line_record.set(parent_base_table_pk, head_record.get(parent_base_table_pk));
	        if ('hls_car_model'.toUpperCase() == 'PRJ_QUOTATION') {
	            line_record.set('document_id', head_record.get(parent_base_table_pk));
	        }
	    }
    }
    line_record.set('document_category', '');
    line_record.set('bp_seq', '');
    for (var i = 0;i < config_records.length;i++) {
        var config_record = config_records[i],
            validation_type = config_record.get('validation_type'),
            column_name = config_record.get('column_name'),
            display_name = config_record.get('column_name') + '_n';
        if (head_record && config_record.get('copy_from_parent_tab') == 'Y') {
            line_record.set(column_name, head_record.get(column_name));
            line_record.set(display_name, head_record.get(display_name));
        }
        if (validation_type == 'LOV' || validation_type == 'LOV_C' || validation_type == 'TREE' || validation_type == 'TREE_C') {
            var documentMapping;
            if (config_record.get('lov_return_vcode') == 'Y') {
                documentMapping = [{
                    from: 'value_code',
                    to: column_name
                }, {
                    from: 'value_code',
                    to: column_name
                }];
                line_record.getField(column_name).setMapping(documentMapping);
            } else {
                documentMapping = [{
                    from: 'value_code',
                    to: column_name
                }, {
                    from: 'value_name',
                    to: display_name
                }];
                line_record.getField(display_name).setMapping(documentMapping);
            }
        } else if (validation_type == 'COMBOBOX' || validation_type == 'COMBOBOX_C') {
            var combobox_field;
            var combobox_documentmapping;
            if (config_record.get('lov_return_vcode') == 'Y') {
                combobox_field = line_record.getField(column_name);
                combobox_field.setPropertity('displayfield', 'value_code');
                line_record.getField(column_name).setMapping(combobox_documentmapping);
            } else {
                combobox_field = line_record.getField(display_name);
                combobox_field.setPropertity('displayfield', 'value_name');
                line_record.getField(display_name).setMapping(combobox_documentmapping);
            }
        }
    }
    window['HLS025_on_layout_dynamic_grid_add'](ds, line_record , config_records,'');
};
window['HLS025_G_MODEL_ON_LAYOUT_DYNAMIC_INNER_GRID_LOAD'] = function(ds) {
    var records = ds.getAll();
    var config_records = $('HLS025_G_MODEL_con_layout_config_ds').getAll();
    if (records.length) {
        for (var i = 0;i < records.length;i++) {
            var line_record = records[i];
            for (var j = 0;j < config_records.length;j++) {
                var config_record = config_records[j],
                    validation_type = config_record.get('validation_type'),
                    column_name = config_record.get('column_name'),
                    display_name = config_record.get('column_name') + '_n';
                if (validation_type == 'LOV' || validation_type == 'LOV_C' || validation_type == 'TREE' || validation_type == 'TREE_C') {
                    var documentMapping;
                    if (config_record.get('lov_return_vcode') == 'Y') {
                        documentMapping = [{
                            from: 'value_code',
                            to: column_name
                        }, {
                            from: 'value_code',
                            to: column_name
                        }];
                        line_record.getField(column_name).setMapping(documentMapping);
                    } else {
                        documentMapping = [{
                            from: 'value_code',
                            to: column_name
                        }, {
                            from: 'value_name',
                            to: display_name
                        }];
                        line_record.getField(display_name).setMapping(documentMapping);
                    }
                } else if (validation_type == 'COMBOBOX' || validation_type == 'COMBOBOX_C') {
                    var combobox_field;
                    var combobox_documentmapping;
                    if (config_record.get('lov_return_vcode') == 'Y') {
                        combobox_field = line_record.getField(column_name);
                        combobox_field.setPropertity('displayfield', 'value_code');
                    } else {
                        combobox_field = line_record.getField(display_name);
                        combobox_field.setPropertity('displayfield', 'value_name');
                    }
                }
            }
            window['HLS025_on_layout_dynamic_grid_load'](ds, line_record,config_records,'');
        }
    }else{
    	window['HLS025_on_layout_dynamic_grid_load'](ds, '',config_records,'');
    }
};
window['HLS025_G_MODEL_ON_LAYOUT_DYNAMIC_INNER_GRID_INDEXCHANGE'] = function(ds,record) {
	var form_ds_id = 'HLS025__hls_car_model_ds';
    if ($A.CmpManager.get(form_ds_id)) {
        var form_ds = $(form_ds_id);
        if (record.get('MODEL_ID'.toLowerCase())) {
            form_ds.setQueryParameter('MODEL_ID'.toLowerCase(), record.get('MODEL_ID'.toLowerCase()));
            form_ds.query();
        }
    }
};
window['HLS025_G_MODEL_ON_LAYOUT_DYNAMIC_INNER_UPDATE'] = function(ds, record, name, value, old_value) {
    window['HLS025_G_MODEL_ON_LAYOUT_DYNAMIC_INNER_CLEAR_LOVPARA'](ds, record, name, value, old_value);
    window['HLS025_G_MODEL_ON_LAYOUT_DYNAMIC_INNER_FIELD_JAVASCRIPT'](ds, record, name, value, old_value);
    window['HLS025_on_layout_dynamic_update'](ds, record, name, value, old_value,'');
};

window['HLS025_G_MODEL_ON_LAYOUT_DYNAMIC_INNER_CLEAR_LOVPARA'] = function(ds, record, name, value, old_value) {
    if (Ext.isEmpty(value)) {
        var query_name = GET_CONFIG_COLUMN_NAME(name),
            field = record.getField(name),
            config_records = $('HLS025_G_MODEL_con_layout_config_ds').getAll();
        var current_field_value;
        for (var i = 0;i < config_records.length;i++) {
            var config_record = config_records[i];
            var lov_cascade_para1 = config_record.get('lov_cascade_para1'),
                lov_cascade_para2 = config_record.get('lov_cascade_para2'),
                lov_cascade_para3 = config_record.get('lov_cascade_para3');
            SET_CLEAR_LOVPARA_EMPTY(query_name, lov_cascade_para1, record, config_record);
            SET_CLEAR_LOVPARA_EMPTY(query_name, lov_cascade_para2, record, config_record);
            SET_CLEAR_LOVPARA_EMPTY(query_name, lov_cascade_para3, record, config_record);
        }
        var current_field = record.getField(name),
            current_lovpara = current_field.get('lovpara'),
            validation_sql;
        if (current_lovpara) {
            validation_sql = current_lovpara['validation_sql'];
        }
        if (!value && validation_sql) {
            var current_loadpara_ds = $('HLS025_G_MODEL_lov_getmapping_ds');

            function on_lov_getmapping_load(load_ds) {
                var lov_records = load_ds.getAll();
                for (var j = 0;j < lov_records.length;j++) {
                    var lov_record = lov_records[j],
                        mapping = current_field.get('mapping'),
                        exists_flag = false,
                        lov_name = lov_record.data['name'].toLowerCase();
                    for (var i = 0,
                        mapping_length = mapping.length;i < mapping_length;i++) {
                        if ((exists_flag = (lov_name == mapping[i]['from']))) {
                            break;
                        }
                    }
                    if (!exists_flag) {
                        record.set(lov_name, '');
                    }
                    current_field.setMapping(mapping);
                }
                current_loadpara_ds.un('load', on_lov_getmapping_load);
                unlock_current_window();
            }
            for (var lov_para_name in current_lovpara) {
                current_loadpara_ds.setQueryParameter(lov_para_name, record.get(lov_para_name));
            }
            current_loadpara_ds.setQueryParameter('validation_sql', validation_sql);
            lock_current_window();
            current_loadpara_ds.on('load', on_lov_getmapping_load);
            current_loadpara_ds.query();
        }
    }
    for (var show_name in record.data) {
        var show_field = record.getField(show_name);
        var lovpara_field = show_field.get('lovpara');
        if (lovpara_field && lovpara_field[name]) {
            record.set(show_name, '');
            var save_name = GET_CONFIG_COLUMN_NAME(show_name);
            if (save_name != show_name) {
                record.set(save_name, '');
            }
        }
    }
};

window['HLS025_G_MODEL_ON_LAYOUT_DYNAMIC_INNER_FIELD_JAVASCRIPT'] = function(ds, record, name, value, old_value, fromLoad) {
    var config_ds = $('HLS025_G_MODEL_con_layout_config_ds');
    var config_record = config_ds.find('column_name', name);
    var parent_record='';
    var layout_code = 'HLS025',
        tab_code = 'G_MODEL';
    if ('G_SERIES'&&'hls_car_series') {
        parent_record = $('HLS025_G_SERIES_hls_car_series_ds').getAt(0);
    }
    if (config_record && config_record.get('field_javascript')) {
        eval(config_record.get('field_javascript'));
    }
};

window['HLS025_G_MODEL_ON_LAYOUT_DYNAMIC_INNER_GRID_QUERY'] = function(ds, qpara) {
    window['HLS025_on_layout_dynamic_grid_query'](ds, qpara,'');
};
]]></script>
        <a:dataSets>
            <a:dataSet id="HLS025_all_tab_config_ds">
                <a:datas>
                    <a:record base_table="hls_car_brand" base_table_pk="BRAND_ID" box_width="1112" column_count="4" configurable="Y" enabled_flag="Y" fetchall="false" field_width="120" form_binder_tab_code="F_BRAND" label_width="100" layout_code="HLS025" margin_top="0" parent_base_table_pk="brand_id" parent_tab_code_flag="Y" parent_table_flag="N" parent_table_tab_code="F_BRAND" query_only="N" query_source="HLS_CAR_BRAND" row_count="1" show_box="Y" tab_code="F_BRAND" tab_seq="10" tab_type="FORM" width="300"/>
                    <a:record base_table="hls_car_series" base_table_pk="SERIES_ID" box_width="1112" column_count="4" configurable="Y" enabled_flag="Y" fetchall="false" field_width="150" form_binder_tab_code="G_SERIES" label_width="120" layout_code="HLS025" margin_height="450" margin_top="0" margin_width="50" parent_base_table_pk="brand_id" parent_tab_code_flag="Y" parent_table="hls_car_brand" parent_table_flag="Y" parent_table_tab_code="F_BRAND" query_only="N" query_source="HLS_CAR_SERIES" row_count="0" show_box="Y" tab_code="G_SERIES" tab_seq="20" tab_type="GRID"/>
                    <a:record base_table="hls_car_model" base_table_pk="MODEL_ID" box_width="1112" column_count="4" configurable="Y" enabled_flag="Y" fetchall="false" field_width="150" form_binder_tab_code="G_MODEL" label_width="120" layout_code="HLS025" margin_height="450" margin_top="0" margin_width="50" parent_base_table_pk="series_id" parent_tab_code_flag="Y" parent_table="hls_car_series" parent_table_flag="Y" parent_table_tab_code="G_SERIES" query_only="N" query_source="HLS_CAR_MODEL" row_count="0" show_box="Y" tab_code="G_MODEL" tab_seq="30" tab_type="GRID"/>
                </a:datas>
            </a:dataSet>
            <a:dataSet id="HLS025_virtual_ds" autocreate="true" submiturl="${/request/@context_path}/modules/layout/server_layout_save.svc?function_code=HLS025&amp;function_usage=MODIFY&amp;number_of_tenant=&amp;number_of_guarantor=&amp;number_of_actual_controller=&amp;number_of_quotation=&amp;layout_code=HLS025&amp;tree_code="/>
            <a:dataSet id="HLS025_F_BRAND_lov_getmapping_ds" fetchall="true" queryurl="${/request/@context_path}/modules/layout/server_layout_sql_parameters_load.svc"/>
            <a:dataSet id="HLS025_F_BRAND_con_layout_config_ds">
                <a:datas>
                    <a:record alignment="LEFT" allow_decimal="FALSE" allow_format="FALSE" autocomplete="true" column_name="brand_code" config_id="47519" copy_from_parent_tab="N" data_type="VARCHAR2" display_flag="Y" enabled_flag="Y" fetchsingle="false" input_mode="READONLY" key_field_flag="N" layout_code="HLS025" lov_return_vcode="N" precision="2" prompt="品牌" query_only="N" readonly_input_mode="TRUE" required_input_mode="FALSE" sys_grid_show_title="false" system_flag="N" tab_code="F_BRAND" underline="N" validation_type="TEXTFIELD" width="120" zero_fill="FALSE"/>
                    <a:record alignment="LEFT" allow_decimal="FALSE" allow_format="FALSE" autocomplete="true" column_name="brand_id" config_id="47520" copy_from_parent_tab="N" data_type="NUMBER" display_flag="N" enabled_flag="Y" fetchsingle="false" input_mode="READONLY" key_field_flag="N" layout_code="HLS025" lov_return_vcode="N" precision="2" prompt="品牌ID" query_only="N" readonly_input_mode="TRUE" required_input_mode="FALSE" sys_grid_show_title="false" system_flag="N" tab_code="F_BRAND" underline="N" validation_type="NUMBERFIELD" width="120" zero_fill="FALSE"/>
                    <a:record alignment="LEFT" allow_decimal="FALSE" allow_format="FALSE" autocomplete="true" column_name="description" config_id="47517" data_type="VARCHAR2" display_flag="Y" enabled_flag="Y" fetchsingle="false" input_mode="READONLY" key_field_flag="N" layout_code="HLS025" lov_return_vcode="N" precision="2" prompt="描述" query_only="N" readonly_input_mode="TRUE" required_input_mode="FALSE" sys_grid_show_title="false" system_flag="Y" tab_code="F_BRAND" validation_type="TEXTFIELD" width="120" zero_fill="FALSE"/>
                </a:datas>
            </a:dataSet>
            <a:dataSet id="HLS025_F_BRAND_hls_car_brand_ds" bindname="HLS025_F_BRAND_hls_car_brand" bindtarget="HLS025_virtual_ds" fetchall="false" processfunction="HLS025_F_BRAND_CON_FORM_PROCESSFUNCTION" queryurl="${/request/@context_path}/modules/layout/server_layout_base_query.svc?layout_code=${/parameter/@layout_code}&amp;tab_code=F_BRAND&amp;bp_seq=&amp;bp_category=" submiturl="${/request/@context_path}/modules/layout/server_layout_save.svc?base_table=hls_car_brand&amp;query_only=N&amp;tab_code=F_BRAND&amp;document_id=${/parameter/@document_id}&amp;document_category=${/parameter/@document_category}&amp;document_type=${/parameter/@document_type}&amp;function_code=${/parameter/@function_code}&amp;function_usage=${/parameter/@function_usage}&amp;parent_table=&amp;parent_base_table_pk=brand_id&amp;root_tree_code=&amp;number_of_tenant=${/parameter/@number_of_tenant}&amp;number_of_guarantor=${/parameter/@number_of_guarantor}&amp;number_of_actual_controller=${/parameter/@number_of_actual_controller}&amp;number_of_quotation=${/parameter/@number_of_quotation}">
                <a:events>
                    <a:event name="submitfailed" handler="window[&apos;HLS025_ON_LAYOUT_DYNAMIC_INNER_SUBMITFAILED&apos;]"/>
                    <a:event name="add" handler="window[&apos;HLS025_F_BRAND_ON_LAYOUT_DYNAMIC_INNER_FORM_INIT&apos;]"/>
                    <a:event name="load" handler="window[&apos;HLS025_F_BRAND_ON_LAYOUT_DYNAMIC_INNER_FORM_INIT&apos;]"/>
                    <a:event name="query" handler="window[&apos;HLS025_F_BRAND_ON_LAYOUT_DYNAMIC_INNER_FORM_QUERY&apos;]"/>
                    <a:event name="update" handler="window[&apos;HLS025_F_BRAND_ON_LAYOUT_DYNAMIC_INNER_UPDATE&apos;]"/>
                </a:events>
                <a:fields>
                    <a:field name="brand_code" readonly="true" required="false" requiredmessage="品牌${l:HLS.NOT_NULL}"/>
                    <a:field name="brand_id" readonly="true" required="false" requiredmessage="品牌ID${l:HLS.NOT_NULL}"/>
                    <a:field name="description" readonly="true" required="false" requiredmessage="描述${l:HLS.NOT_NULL}"/>
                </a:fields>
            </a:dataSet>
            <script><![CDATA[window['HLS025_F_BRAND_ONREADY']();]]></script>
            <a:dataSet id="HLS025_G_SERIES_lov_getmapping_ds" fetchall="true" queryurl="${/request/@context_path}/modules/layout/server_layout_sql_parameters_load.svc"/>
            <a:dataSet id="HLS025_G_SERIES_con_layout_config_ds">
                <a:datas>
                    <a:record alignment="LEFT" allow_decimal="FALSE" allow_format="FALSE" autocomplete="true" column_name="series_code" config_id="47512" copy_from_parent_tab="N" data_type="VARCHAR2" display_flag="Y" display_order="10" enabled_flag="Y" fetchsingle="false" input_mode="REQUIRED" key_field_flag="N" layout_code="HLS025" lov_return_vcode="N" precision="2" prompt="车系" query_only="N" readonly_input_mode="FALSE" required_input_mode="TRUE" sys_grid_show_title="false" system_flag="N" tab_code="G_SERIES" underline="N" validation_type="TEXTFIELD" width="120" zero_fill="FALSE"/>
                    <a:record alignment="LEFT" allow_decimal="FALSE" allow_format="FALSE" autocomplete="true" column_name="description" config_id="47510" data_type="VARCHAR2" display_flag="Y" display_order="20" enabled_flag="Y" fetchsingle="false" input_mode="REQUIRED" key_field_flag="N" layout_code="HLS025" lov_return_vcode="N" precision="2" prompt="描述" query_only="N" readonly_input_mode="FALSE" required_input_mode="TRUE" sys_grid_show_title="false" system_flag="Y" tab_code="G_SERIES" validation_type="TEXTFIELD" width="240" zero_fill="FALSE"/>
                    <a:record alignment="LEFT" allow_decimal="FALSE" allow_format="FALSE" autocomplete="true" column_name="enabled_flag" config_id="47511" data_type="VARCHAR2" default_value="Y" display_flag="Y" display_order="30" enabled_flag="Y" fetchsingle="false" input_mode="REQUIRED" key_field_flag="N" layout_code="HLS025" lov_return_vcode="N" precision="2" prompt="启用" query_only="N" readonly_input_mode="FALSE" required_input_mode="TRUE" sys_grid_show_title="false" system_flag="Y" tab_code="G_SERIES" validation_type="CHECKBOX" width="50" zero_fill="FALSE"/>
                    <a:record alignment="center" allow_decimal="FALSE" allow_format="FALSE" autocomplete="true" column_name="brand_id" config_id="47516" copy_from_parent_tab="N" data_type="NUMBER" display_flag="N" enabled_flag="Y" fetchsingle="false" key_field_flag="N" layout_code="HLS025" lov_return_vcode="N" precision="2" prompt="品牌ID" query_only="N" readonly_input_mode="FALSE" required_input_mode="FALSE" sys_grid_show_title="false" system_flag="N" tab_code="G_SERIES" underline="N" validation_type="NUMBERFIELD" width="120" zero_fill="FALSE"/>
                </a:datas>
            </a:dataSet>
            <a:dataSet id="HLS025_G_SERIES_hls_car_series_ds" autopagesize="true" bindname="HLS025_G_SERIES_hls_car_series" bindtarget="HLS025_F_BRAND_hls_car_brand_ds" fetchall="false" processfunction="HLS025_G_SERIES_CON_GRID_PROCESS" queryurl="${/request/@context_path}/modules/layout/server_layout_base_query.svc?layout_code=${/parameter/@layout_code}&amp;tab_code=G_SERIES&amp;bp_seq=&amp;bp_category=" selectable="true" submiturl="${/request/@context_path}/modules/layout/server_layout_save.svc?base_table=hls_car_series&amp;query_only=N&amp;tab_code=G_SERIES&amp;document_id=${/parameter/@document_id}&amp;document_category=${/parameter/@document_category}&amp;document_type=${/parameter/@document_type}&amp;function_code=${/parameter/@function_code}&amp;function_usage=${/parameter/@function_usage}&amp;parent_table=hls_car_brand&amp;parent_base_table_pk=brand_id&amp;root_tree_code=&amp;number_of_tenant=${/parameter/@number_of_tenant}&amp;number_of_guarantor=${/parameter/@number_of_guarantor}&amp;number_of_actual_controller=${/parameter/@number_of_actual_controller}&amp;number_of_quotation=${/parameter/@number_of_quotation}">
                <a:events>
                    <a:event name="add" handler="window[&apos;HLS025_G_SERIES_ON_LAYOUT_DYNAMIC_INNER_GRID_ADD&apos;]"/>
                    <a:event name="load" handler="window[&apos;HLS025_G_SERIES_ON_LAYOUT_DYNAMIC_INNER_GRID_LOAD&apos;]"/>
                    <a:event name="indexchange" handler="window[&apos;HLS025_G_SERIES_ON_LAYOUT_DYNAMIC_INNER_GRID_INDEXCHANGE&apos;]"/>
                    <a:event name="query" handler="window[&apos;HLS025_G_SERIES_ON_LAYOUT_DYNAMIC_INNER_GRID_QUERY&apos;]"/>
                    <a:event name="update" handler="window[&apos;HLS025_G_SERIES_ON_LAYOUT_DYNAMIC_INNER_UPDATE&apos;]"/>
                </a:events>
                <a:fields>
                    <a:field name="series_code" readonly="false" required="true" requiredmessage="车系${l:HLS.NOT_NULL}"/>
                    <a:field name="description" readonly="false" required="true" requiredmessage="描述${l:HLS.NOT_NULL}"/>
                    <a:field name="enabled_flag" checkedvalue="Y" defaultvalue="Y" readonly="false" required="true" requiredmessage="启用${l:HLS.NOT_NULL}" uncheckedvalue="N"/>
                    <a:field name="brand_id" readonly="false" required="false" requiredmessage="品牌ID${l:HLS.NOT_NULL}"/>
                </a:fields>
            </a:dataSet>
            <script><![CDATA[window['HLS025_G_SERIES_CHILD_ONREADY']();]]></script>
            <a:dataSet id="HLS025_G_MODEL_lov_getmapping_ds" fetchall="true" queryurl="${/request/@context_path}/modules/layout/server_layout_sql_parameters_load.svc"/>
            <a:dataSet id="HLS025_G_MODEL_con_layout_config_ds">
                <a:datas>
                    <a:record alignment="LEFT" allow_decimal="FALSE" allow_format="FALSE" autocomplete="true" column_name="model_code" config_id="47515" copy_from_parent_tab="N" display_flag="Y" display_order="10" enabled_flag="Y" fetchsingle="false" input_mode="REQUIRED_ONLY_ADD" key_field_flag="N" layout_code="HLS025" lov_return_vcode="N" precision="2" prompt="车型" query_only="N" readonly_input_mode="FALSE" required_input_mode="TRUE" sys_grid_show_title="false" system_flag="N" tab_code="G_MODEL" underline="N" validation_type="TEXTFIELD" width="120" zero_fill="FALSE"/>
                    <a:record alignment="LEFT" allow_decimal="FALSE" allow_format="FALSE" autocomplete="true" column_name="description" config_id="47513" data_type="VARCHAR2" display_flag="Y" display_order="20" enabled_flag="Y" fetchsingle="false" input_mode="OPTION" key_field_flag="N" layout_code="HLS025" lov_return_vcode="N" precision="2" prompt="描述" query_only="N" readonly_input_mode="FALSE" required_input_mode="FALSE" sys_grid_show_title="false" system_flag="Y" tab_code="G_MODEL" validation_type="TEXTFIELD" width="240" zero_fill="FALSE"/>
                    <a:record alignment="LEFT" allow_decimal="FALSE" allow_format="FALSE" autocomplete="true" column_name="enabled_flag" config_id="47514" data_type="VARCHAR2" default_value="Y" display_flag="Y" display_order="30" enabled_flag="Y" fetchsingle="false" input_mode="REQUIRED" key_field_flag="N" layout_code="HLS025" lov_return_vcode="N" precision="2" prompt="启用" query_only="N" readonly_input_mode="FALSE" required_input_mode="TRUE" sys_grid_show_title="false" system_flag="Y" tab_code="G_MODEL" validation_type="CHECKBOX" width="50" zero_fill="FALSE"/>
                </a:datas>
            </a:dataSet>
            <a:dataSet id="HLS025_G_MODEL_hls_car_model_ds" autopagesize="true" bindname="HLS025_G_MODEL_hls_car_model" bindtarget="HLS025_G_SERIES_hls_car_series_ds" fetchall="false" processfunction="HLS025_G_MODEL_CON_GRID_PROCESS" queryurl="${/request/@context_path}/modules/layout/server_layout_base_query.svc?layout_code=${/parameter/@layout_code}&amp;tab_code=G_MODEL&amp;bp_seq=&amp;bp_category=" selectable="true" submiturl="${/request/@context_path}/modules/layout/server_layout_save.svc?base_table=hls_car_model&amp;query_only=N&amp;tab_code=G_MODEL&amp;document_id=${/parameter/@document_id}&amp;document_category=${/parameter/@document_category}&amp;document_type=${/parameter/@document_type}&amp;function_code=${/parameter/@function_code}&amp;function_usage=${/parameter/@function_usage}&amp;parent_table=hls_car_series&amp;parent_base_table_pk=series_id&amp;root_tree_code=&amp;number_of_tenant=${/parameter/@number_of_tenant}&amp;number_of_guarantor=${/parameter/@number_of_guarantor}&amp;number_of_actual_controller=${/parameter/@number_of_actual_controller}&amp;number_of_quotation=${/parameter/@number_of_quotation}">
                <a:events>
                    <a:event name="add" handler="window[&apos;HLS025_G_MODEL_ON_LAYOUT_DYNAMIC_INNER_GRID_ADD&apos;]"/>
                    <a:event name="load" handler="window[&apos;HLS025_G_MODEL_ON_LAYOUT_DYNAMIC_INNER_GRID_LOAD&apos;]"/>
                    <a:event name="indexchange" handler="window[&apos;HLS025_G_MODEL_ON_LAYOUT_DYNAMIC_INNER_GRID_INDEXCHANGE&apos;]"/>
                    <a:event name="query" handler="window[&apos;HLS025_G_MODEL_ON_LAYOUT_DYNAMIC_INNER_GRID_QUERY&apos;]"/>
                    <a:event name="update" handler="window[&apos;HLS025_G_MODEL_ON_LAYOUT_DYNAMIC_INNER_UPDATE&apos;]"/>
                </a:events>
                <a:fields>
                    <a:field name="model_code" readonly="false" required="true" requiredmessage="车型${l:HLS.NOT_NULL}"/>
                    <a:field name="description" readonly="false" required="false" requiredmessage="描述${l:HLS.NOT_NULL}"/>
                    <a:field name="enabled_flag" checkedvalue="Y" defaultvalue="Y" readonly="false" required="true" requiredmessage="启用${l:HLS.NOT_NULL}" uncheckedvalue="N"/>
                </a:fields>
            </a:dataSet>
            <script><![CDATA[window['HLS025_G_MODEL_CHILD_ONREADY']();]]></script>
        </a:dataSets>
        <a:screenBody padding="0" style="width:98%;">
            <a:screenTopToolbar style="height:42px">
                <a:screenTitle/>
                <a:gridButton id="HLS025_exit" click="HLS025_EXIT_LAYOUT_DYNAMIC_CLICK" text="退出"/>
                <a:gridButton id="HLS025_save" click="HLS025_SAVE_LAYOUT_DYNAMIC_CLICK" text="保存"/>
                <a:gridButton id="HLS025_query" click="HLS025_QUERY_LAYOUT_DYNAMIC_CLICK" text="查询"/>
            </a:screenTopToolbar>
            <a:box style="width:%98;padding:8px 0px 0px 8px">
                <a:form width="300" wrapperadjust="false">
                    <div style="width:1112px">
                        <a:box column="4" labelseparator=" " labelwidth="100" row="1" width="1112">
                            <a:textField name="brand_code" id="HLS025_F_BRAND_HLS_CAR_BRAND_BRAND_CODE" bindtarget="HLS025_F_BRAND_hls_car_brand_ds" colspan="1" prompt="品牌" rowspan="1" style="margin-top:0px;margin-bottom:0px" width="120"/>
                            <a:textField name="description" id="HLS025_F_BRAND_HLS_CAR_BRAND_DESCRIPTION" bindtarget="HLS025_F_BRAND_hls_car_brand_ds" colspan="1" prompt="描述" rowspan="1" style="margin-top:0px;margin-bottom:0px" width="120"/>
                            <div style="margin-top:0px;margin-bottom:0px" width="120"/>
                            <div style="margin-top:0px;margin-bottom:0px" width="120"/>
                        </a:box>
                    </div>
                </a:form>
            </a:box>
            <a:box style="width:%98;padding:8px 0px 0px 8px">
                <a:grid id="HLS025_G_SERIES_con_contract_grid_id" bindtarget="HLS025_G_SERIES_hls_car_series_ds" marginheight="450" marginwidth="50" navbar="true">
                    <a:columns>
                        <a:column name="series_code" align="LEFT" editorfunction="HLS025_G_SERIES_SEE_DETAIL_EDITOR" prompt="车系" showtitle="false" width="120"/>
                        <a:column name="description" align="LEFT" editorfunction="HLS025_G_SERIES_SEE_DETAIL_EDITOR" prompt="描述" showtitle="false" width="240"/>
                        <a:column name="enabled_flag" align="LEFT" editorfunction="HLS025_G_SERIES_SEE_DETAIL_EDITOR" prompt="启用" width="50"/>
                    </a:columns>
                    <a:editors>
                        <a:textField id="HLS025_G_SERIES_series_code_id"/>
                        <a:textField id="HLS025_G_SERIES_description_id"/>
                        <a:checkBox id="HLS025_G_SERIES_enabled_flag_id"/>
                    </a:editors>
                    <a:toolBar>
                        <span/>
                        <a:button text="新增" type="add"/>
                        <a:button text="移除" type="clear"/>
                        <a:button click="HLS025_G_SERIES_GRID_QUERY" icon="${/request/@context_path}/images/search.png" text="查询"/>
                    </a:toolBar>
                </a:grid>
            </a:box>
            <a:box style="width:%98;padding:8px 0px 0px 8px">
                <a:grid id="HLS025_G_MODEL_con_contract_grid_id" bindtarget="HLS025_G_MODEL_hls_car_model_ds" marginheight="450" marginwidth="50" navbar="true">
                    <a:columns>
                        <a:column name="model_code" align="LEFT" editorfunction="HLS025_G_MODEL_SEE_DETAIL_EDITOR" prompt="车型" showtitle="false" width="120"/>
                        <a:column name="description" align="LEFT" editorfunction="HLS025_G_MODEL_SEE_DETAIL_EDITOR" prompt="描述" showtitle="false" width="240"/>
                        <a:column name="enabled_flag" align="LEFT" editorfunction="HLS025_G_MODEL_SEE_DETAIL_EDITOR" prompt="启用" width="50"/>
                    </a:columns>
                    <a:editors>
                        <a:textField id="HLS025_G_MODEL_model_code_id"/>
                        <a:textField id="HLS025_G_MODEL_description_id"/>
                        <a:checkBox id="HLS025_G_MODEL_enabled_flag_id"/>
                    </a:editors>
                    <a:toolBar>
                        <span/>
                        <a:button text="新增" type="add"/>
                        <a:button text="移除" type="clear"/>
                        <a:button click="HLS025_G_MODEL_GRID_QUERY" icon="${/request/@context_path}/images/search.png" text="查询"/>
                    </a:toolBar>
                </a:grid>
            </a:box>
        </a:screenBody>
    </a:view>
</a:screen>
