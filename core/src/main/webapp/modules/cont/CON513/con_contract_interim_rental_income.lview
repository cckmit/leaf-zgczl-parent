<?xml version="1.0" encoding="UTF-8"?>
<a:screen xmlns:a="http://www.leaf-framework.org/application" customizationEnabled="true" trace="true">
    <a:init-procedure>
        <a:model-query model="basic.hls_sys_time_default_value" rootPath="default_rp"/>
        <a:model-query model="cont.CON513.con_contract_default_value" rootPath="default_vl"/>
    </a:init-procedure>
    <a:view>
        <a:link id="con_contract_interim_rental_calc_link" model="cont.CON513.con_contract_interim_rental_calc" modelaction="update"/>
        <a:link id="con_contract_interim_rental_save_link" model="cont.CON513.con_contract_interim_rental_save" modelaction="batch_update"/>
        <a:link id="con_contract_interim_rental_save_wfl_link" model="cont.CON513.con_contract_interim_rental_save_wfl" modelaction="execute"/>
        <script src="${/request/@context_path}/javascripts/calculate.js"/>
        <a:link id="pageLink_contractMaintainDs_grid" url="${/request/@context_path}/modules/cont/CON513/con_contract_interim_rental_ic_detail.lview"/>
        <a:link id="con_contract_interim_rental_to_cshflow_link" model="cont.CON513.update_con_contract_cashflow" modelaction="update"/>
        <a:link id="con_contract_interim_rental_delete_link" model="cont.CON513.con_contract_interim_rental_delete" modelaction="execute"/>
        <script src="${/request/@context_path}/javascripts/calculate.js"/>
        <script><![CDATA[
            function calc() {
                if ($('con_contract_interim_rental_calc_ds').validate()) {
                    var record = $('con_contract_interim_rental_calc_ds').getCurrentRecord();
                    var inception_of_lease = Leaf.formatDate(record.get('inception_of_lease'));
                    var calc_start_date = Leaf.formatDate(record.get('calc_start_date'));
                    var finance_amount = record.get('finance_amount');
                    var int_rate = record.get('int_rate');
                    if (inception_of_lease >= calc_start_date) {
                        Leaf.Masker.mask(Ext.getBody(), '${l:HLS.EXECUTING}');
                        Leaf.request({
                            url: $('con_contract_interim_rental_calc_link').getUrl(),
                            para: {
                                'finance_amount': finance_amount,
                                'int_rate': int_rate,
                                'inception_of_lease': inception_of_lease,
                                'calc_start_date': calc_start_date
                            },
                            success: function(data) {
                                Leaf.Masker.unmask(Ext.getBody());
                                if (data.result) {
                                    record.set('interim_rental', data.result.interim_rental);
                                }
                                Leaf.SideBar.show({
                                    msg: '${l:CON508.CALC_SUCCESS}',
                                    durection: 3000
                                });
                            },
                            error: function() {
                                Leaf.Masker.unmask(Ext.getBody());
                            },
                            failure: function() {
                                Leaf.Masker.unmask(Ext.getBody());
                            }
                        });
                    } else {
                        Leaf.showMessage('${l:PROMPT}', '${l:CON508.LEASE_START_MORE_THEN_CALC_DATE}');
                    }
                    // var records=$('con509_interim_rental_launch_ds').gatAll();
                    // for(var i=0;i<records.length;i++){
                    // var launch_date=records[i].get('launch_date');
                    // if(inception_of_lease<launch_date){
                    // Leaf.showMessage('${l:PROMPT}', '${l:CON508.LEASE_START_MORE_THEN_CALC_DATE}');
                    // }
                    // }
                }
            }
            
            function execute() {
                var contract_id = '${/parameter/@contract_id}';
                Leaf.request({
                    url: $('con_contract_interim_rental_save_wfl_link').getUrl(),
                    para: {
                        contract_id: '${/parameter/@contract_id}',
                        payment_req_id: '${/parameter/@payment_req_id}'
                    },
                    success: function() {
                        Leaf.SideBar.show({
                            msg: '${l:HLS.SUBMIT_SUCCESS}',
                            duration: 2000
                        });
                        $('con_contract_interim_rental_calc_ds').setQueryUrl('${/request/@context_path}/autocrud/cont.CON513.con_contract_interim_rental_hd/query?contract_id=' + contract_id);
                        $('con509_interim_rental_launch_ds').setQueryUrl('${/request/@context_path}/autocrud/cont.CON513.con_contract_interim_rental/query?contract_id=' + contract_id);
                        $('con509_interim_rental_pay_ds').setQueryUrl('${/request/@context_path}/autocrud/cont.CON513.con_contract_interim_rental_pa/query?contract_id=' + contract_id);
                        $('con_contract_interim_rental_calc_ds').query();
                        $('con509_interim_rental_launch_ds').query();
                        $('con509_interim_rental_pay_ds').query();
                        Leaf.Masker.unmask(Ext.getBody());
                    },
                    failure: function() {
                        Leaf.Masker.unmask(Ext.getBody());
                    },
                    error: function() {
                        Leaf.Masker.unmask(Ext.getBody());
                    },
                    scope: this
                });
            
            }
            
            
            
            function save() {
                if ($('con_contract_interim_rental_calc_ds').validate() || $('con509_interim_rental_launch_ds').validate()) {
                    if($('con509_interim_rental_launch_ds').getAll().length == 0){
                        Leaf.showMessage('提示','行数据不能为空');
                        return;
                    }
                    Leaf.Masker.mask(Ext.getBody(), '${l:HLS.EXECUTING}');
                    var detail_header_record = $('con_contract_interim_rental_calc_ds').getAt(0);
                    var contract_id = detail_header_record.get('contract_id');
                    var inception_of_lease = detail_header_record.get('inception_of_lease');
                    var first_launch_date = detail_header_record.get('first_launch_date');
                    var annual_pay_times = detail_header_record.get('annual_pay_times');
                    var deposit = detail_header_record.get('deposit');
                    var other_fee2 = detail_header_record.get('other_fee2');
                    var deposit_interest_flag = detail_header_record.get('deposit_interest_flag');
                    var other_fee_interest_flag = detail_header_record.get('other_fee_interest_flag');
                    var records = $('con509_interim_rental_launch_ds').getAll();
                    if (Leaf.isEmpty(inception_of_lease) || Leaf.isEmpty(annual_pay_times)) {
                        return;
                    }
                    //var param = detail_header_record.data;
                    //param['details'] = [];
                    var param = [];
                    for (var i = 0;i < records.length;i++) {
                        records[i].set('_status', 'update');
                        records[i].set('contract_id', contract_id);
                        records[i].set('inception_of_lease', inception_of_lease);
                        records[i].set('first_launch_date', first_launch_date);
                        records[i].set('annual_pay_times', annual_pay_times);
                        records[i].set('payment_req_id', '${/parameter/@payment_req_id}');
                        // records[i].set('deposit', deposit);
                        // records[i].set('other_fee2', other_fee2);
                        records[i].set('deposit_interest_flag', deposit_interest_flag);
                        records[i].set('other_fee_interest_flag', other_fee_interest_flag);
                        
                        // if(i == 0 ){
							// records[i].set('launch_amount',records[i].get('launch_amount') + parseFloat((deposit_interest_flag=='Y'?deposit:0)) + parseFloat((other_fee_interest_flag=='Y'?other_fee2:0)));
							//
                        // }
                        param.push(records[i].data);
                    }
                    Leaf.request({
                        url: $('con_contract_interim_rental_save_link').getUrl(),
                        para: param,
                        success: function() {
                            Leaf.SideBar.show({
                                msg: '${l:HLS.SUBMIT_SUCCESS}',
                                duration: 2000
                            });
                            $('con_contract_interim_rental_calc_ds').setQueryUrl('${/request/@context_path}/autocrud/cont.CON513.con_contract_interim_rental_hd/query?contract_id=' + contract_id);
                            $('con509_interim_rental_launch_ds').setQueryUrl('${/request/@context_path}/autocrud/cont.CON513.con_contract_interim_rental/query?contract_id=' + contract_id);
                            $('con509_interim_rental_pay_ds').setQueryUrl('${/request/@context_path}/autocrud/cont.CON513.con_contract_interim_rental_pa/query?contract_id=' + contract_id);
                            $('con_contract_interim_rental_calc_ds').query();
                            $('con509_interim_rental_launch_ds').query();
                            $('con509_interim_rental_pay_ds').query();
                            Leaf.Masker.unmask(Ext.getBody());
                        },
                        failure: function() {
                            Leaf.Masker.unmask(Ext.getBody());
                        },
                        error: function() {
                            Leaf.Masker.unmask(Ext.getBody());
                        },
                        scope: this,
                        sync: true
                    });
                }
            }
            
            function con509_render_contractMaintainDs_grid(value, record, name) {
                var contract_id = record.get('contract_id');
                var pay_date = record.get('pay_date1');
                return '<a href="javascript:con509_contractMaintainDs_grid(' + contract_id + ',\'' + pay_date + '\');">' + value + '</a>';
            }
            
            function con509_contractMaintainDs_grid(contract_id, pay_date) {
                new Leaf.Window({
                    id: 'pageLink_contractMaintainDs_gd',
                    url: $('pageLink_contractMaintainDs_grid').getUrl(),
                    params: {
                        contract_id: contract_id,
                        pay_date: pay_date
                    },
                    title: '收益分摊',
                    height: 500,
                    width: 800
                });
            }
            
            function update_to_cashflow() {
                var records = $('con509_interim_rental_launch_ds').getAll();
                
                if(records.length<=0){
                    Leaf.showMessage('${l:PROMPT}', '必输项不能为空！');
                    return;
                }
                
                for (var i = 0;i < records.length;i++) {
                    if (records[i].dirty) {
                        Leaf.showMessage('${l:PROMPT}', '请先计算再插入现金流！');
                        return;
                    }
                    if (records[i].isNew) {
                        Leaf.showMessage('${l:PROMPT}', '数据维护不完全！');
                        return;
                    }
                }
                Leaf.request({
                    url: $('con_contract_interim_rental_to_cshflow_link').getUrl(),
                    para: {
                        contract_id: '${/parameter/@contract_id}'
                    },
                    success: function() {
                        Leaf.SideBar.show({
                            msg: '${l:HLS.SUBMIT_SUCCESS}',
                            duration: 2000
                        });
                        Leaf.Masker.unmask(Ext.getBody());
                    },
                    failure: function() {
                        Leaf.Masker.unmask(Ext.getBody());
                    },
                    error: function() {
                        Leaf.Masker.unmask(Ext.getBody());
                    },
                    scope: this
                });
            }
            
            function update_interim_rental_pay(ds, record, name, value, oldvalue) {
                var vat_flag = '${/model/default_vl/record/@vat_flag}';
                var interim_rental_tax;
                if (name == 'interim_rental_amount') {
                    var interim_rental_amount = div(value, 1.13);
                    if (vat_flag == 'N') {
                        interim_rental_tax = '0';
                    } else {
                        interim_rental_tax = mul(0.13, interim_rental_amount);
                    }
            
                    record.set('interim_rental_tax', interim_rental_tax);
                    /* var records = ds.getAll();
                     var interim_rental_amount_total =0;
                     for (var j = 0;j < records.length;j++) {
                     interim_rental_amount_total= plus(records[j].get('interim_rental_amount'),interim_rental_amount_total);
                     }
                     record.set('interim_rental_amount_total',interim_rental_amount_total);
                     alert(interim_rental_amount_total); */
            
                }
            
            }
            
            function interim_rental_ic_link() {
                var vat_flag = '${/model/default_vl/record/@vat_flag}';
                new Leaf.Window({
                    id: 'pageLink_contractMaintainDs_gd',
                    url: $('pageLink_contractMaintainDs_grid').getUrl(),
                    params: {
                        contract_id: '${/parameter/@contract_id}',
                        vat_flag: vat_flag
                    },
                    title: '收益分摊',
                    height: 500,
                    width: 800
                });
            }
            
            function beforesubmit_interim_rental_pa(ds) {
                var records = ds.getAll();
                var interim_rental_amount_total = 0;
                for (var j = 0;j < records.length;j++) {
                    interim_rental_amount_total = plus(records[j].get('interim_rental_amount'), interim_rental_amount_total);
                }
                for (var i = 0;i < records.length;i++) {
                    records[i].set('interim_rental_amount_total', interim_rental_amount_total);
                }
            
            }
            
            function create_rental_calc_record(ds) {
                if (Ext.isEmpty(ds.getAt(0))) {
            
                    var h_record = $('con509_contract_result_ds').getCurrentRecord();
                    var finance_amount = h_record.get('finance_amount');
                    ds.create({
                        finance_amount: finance_amount
                    });
                }
            }
            
            //求和计算
            
            function rental_pay_caculateTotal(data, name) {
                var total = 0;
                var length = data.length;
                var value = 0;
                for (var i = 0;i < length;i++) {
                    if (Ext.isEmpty(data[i].get(name))) {
                        value = 0;
                    } else {
                        value = data[i].get(name);
                    }
                    total = plus(total, value);
                }
                return total.toFixed(2);
            }
            
            function create_interim_rental_pay_record() {}
            
            
            function del_cont_interim_rental() {
                var records = $('con509_interim_rental_launch_ds').getSelected();
                for (var i = 0;i < records.length;i++) {
                    var line_id = records[i].get('line_id');
                    Leaf.request({
                        url: $('con_contract_interim_rental_delete_link').getUrl(),
                        para: {
                            contract_id: '${/parameter/@contract_id}',
                            line_id: line_id
                        },
                        success: function() {
                            $('con509_interim_rental_launch_ds').query();
                            $('con509_interim_rental_pay_ds').query();
                            Leaf.SideBar.show({
                                msg: '${l:HLS.SUBMIT_SUCCESS}',
                                duration: 2000
                            });
                            Leaf.Masker.unmask(Ext.getBody());
            
                        },
                        failure: function() {
                            Leaf.Masker.unmask(Ext.getBody());
                        },
                        error: function() {
                            Leaf.Masker.unmask(Ext.getBody());
                        },
                        scope: this
                    });
                }
            
            }
        ]]></script>
        <a:dataSets>
            <a:dataSet id="contractQueryScreen_channelDs" loadData="true" model="cont.CON513.con_contract_interim_rental_lov"/>
            <a:dataSet id="con_contract_interim_rental_calc_ds" autoCreate="true" autoQuery="true" model="cont.CON513.con_contract_interim_rental_hd" queryUrl="${/request/@context_path}/autocrud/cont.CON513.con_contract_interim_rental_hd/query?contract_id=${/parameter/@contract_id}">
                <a:fields>
                    <a:field name="first_launch_date" readOnly="true"/>
                    <a:field name="launch_tt_amount" readOnly="true"/>
                    <a:field name="annual_pay_times" defaultValue="${/model/default_vl/record/@annual_pay_times}"/>
                    <a:field name="annual_pay_times_desc" defaultValue="${/model/default_vl/record/@annual_pay_times_desc}" displayField="code_value_name" options="contractQueryScreen_channelDs" required="true" returnField="annual_pay_times" valueField="code_value"/>
                    <a:field name="contract_name"/>
                    <a:field name="int_rate" required="false"/>
                    <a:field name="inception_of_lease" defaultValue="${/model/default_rp/record/@inception_of_lease}" required="true"/>
                    <a:field name="calc_start_date" defaultValue="${/model/default_rp/record/@now_time}" required="false"/>
                    <a:field name="finance_amount" required="false"/>
                    <a:field name="contract_number" defaultValue="${/parameter/@contract_number}" lovGridHeight="450" lovHeight="600" lovService="cont.CON513.con_contract_query" lovWidth="500" required="true">
                        <a:mapping>
                            <a:map from="contract_number" to="contract_number"/>
                            <a:map from="contract_id" to="contract_id"/>
                            <a:map from="contract_name" to="contract_name"/>
                            <a:map from="int_rate" to="int_rate"/>
                            <a:map from="inception_of_lease" to="inception_of_lease"/>
                            <a:map from="finance_amount" to="finance_amount"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="contract_id" defaultValue="${/parameter/@contract_id}"/>
                    <a:field name="deposit" readOnly="true"/>
                    <a:field name="other_fee2" readOnly="true"/>
                    <a:field name="other_fee_interest_flag" checkedValue="Y" defaultValue="N" uncheckedValue="N"/>
                    <a:field name="deposit_interest_flag" checkedValue="Y" defaultValue="N" uncheckedValue="N"/>
                </a:fields>
                <a:events>
                    <a:event name="load" handler="create_rental_calc_record"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="con509_interim_rental_launch_ds" autoCount="false" fetchAll="true" loadData="true" model="cont.CON513.con_contract_interim_rental" queryUrl="${/request/@context_path}/autocrud/cont.CON513.con_contract_interim_rental/query?contract_id=${/parameter/@contract_id}" selectable="true">
                <a:fields>
                    <a:field name="launch_add_amount"/>
                    <a:field name="launch_date" required="true"/>
                    <a:field name="launch_amount" required="true"/>
                    <a:field name="line_id"/>
                </a:fields>
            </a:dataSet>
            <a:dataSet id="con509_interim_rental_pay_ds" autoQuery="true" model="cont.CON513.con_contract_interim_rental_pa" queryUrl="${/request/@context_path}/autocrud/cont.CON513.con_contract_interim_rental_pa/query?contract_id=${/parameter/@contract_id}" selectable="true">
                <a:fields>
                    <a:field name="interim_rental_amount"/>
                    <a:field name="interim_rental_tax" readOnly="true"/>
                </a:fields>
                <a:events>
                    <a:event name="update" handler="update_interim_rental_pay"/>
                    <a:event name="beforesubmit" handler="beforesubmit_interim_rental_pa"/>
                </a:events>
            </a:dataSet>
        </a:dataSets>
        <a:screenBody>
            <a:screenTopToolbar>
                <!--  <a:gridButton click="calc" text="HLS.CALCULATIONS"/>-->
                <a:gridButton click="save" text="计算"/>
                <a:gridButton click="update_to_cashflow" text="更新至现金流"/>
            </a:screenTopToolbar>
            <a:form column="4" labelWidth="120" title="租前息计算">
                <a:lov name="contract_number" bindTarget="con_contract_interim_rental_calc_ds" prompt="HLS.CONTRACT_NUMBER">
                    <a:events>
                        <a:event name="focus" handler="function(object){on_std_focus(object,&apos;CONTRACT&apos;)}"/>
                    </a:events>
                </a:lov>
                <a:datePicker name="first_launch_date" bindTarget="con_contract_interim_rental_calc_ds" prompt="首次投放日期"/>
                <a:numberField name="deposit" allowFormat="true" bindTarget="con_contract_interim_rental_calc_ds" prompt="保证金"/>
                <a:checkBox name="deposit_interest_flag" bindTarget="con_contract_interim_rental_calc_ds" prompt="是否计入计息本金"/>
                <a:datePicker name="inception_of_lease" bindTarget="con_contract_interim_rental_calc_ds" prompt="CON500.CON_CONTRACT.INCEPTION_OF_LEASE"/>
                <a:numberField name="launch_tt_amount" allowDecimals="true" allowFormat="true" allowNegative="false" bindTarget="con_contract_interim_rental_calc_ds" prompt="总投放金额"/>
                <a:numberField name="other_fee2" allowFormat="true" bindTarget="con_contract_interim_rental_calc_ds" prompt="咨询费"/>
                <a:checkBox name="other_fee_interest_flag" bindTarget="con_contract_interim_rental_calc_ds" prompt="是否计入计息本金"/>
                <a:comboBox name="annual_pay_times_desc" bindTarget="con_contract_interim_rental_calc_ds" prompt="支付频率"/>
            </a:form>
            <a:hBox>
                <a:grid id="con509_interim_rental_launch_grid" bindTarget="con509_interim_rental_launch_ds" height="300" navBar="true" width="510">
                    <a:toolBar>
                        <a:button type="add"/>
                        <a:button click="del_cont_interim_rental" icon="${/request/@context_path}/images/clear.png" text="删除"/>
                    </a:toolBar>
                    <a:columns>
                        <a:column name="launch_date" editor="con509_interim_rental_launch_grid_dp" prompt="投放日期" renderer="Leaf.formatDate" width="120"/>
                        <a:column name="launch_amount" editor="con509_interim_rental_launch_grid_nf" prompt="投放金额" renderer="Leaf.formatMoney" width="150"/>
                        <a:column name="launch_add_amount" prompt="累计投放金额" renderer="Leaf.formatMoney" width="200"/>
                    </a:columns>
                    <a:editors>
                        <a:datePicker id="con509_interim_rental_launch_grid_dp"/>
                        <a:numberField id="con509_interim_rental_launch_grid_nf"/>
                    </a:editors>
                </a:grid>
                <a:grid id="con509_interim_rental_pay_grid" bindTarget="con509_interim_rental_pay_ds" height="300" navBar="true" width="500">
                    <a:toolBar>
                        <!-- <a:label prompt="租前息支付计划表"/> -->
                        <a:button type="save"/>
                        <!-- <a:button click="interim_rental_ic_link" icon="${/request/@context_path}/images/search.png" text="收益分摊"/> -->
                    </a:toolBar>
                    <a:columns>
                        <a:column name="pay_index" prompt="次数" width="50"/>
                        <a:column name="pay_date" editor="con509_interim_rental_pay_grid_dp" prompt="支付日期" renderer="Leaf.formatDate" width="120"/>
                        <a:column name="interim_rental_amount" editor="con509_interim_rental_pay_grid_nf" footerRenderer="rental_pay_caculateTotal" prompt="租前息金额" renderer="Leaf.formatMoney" width="100"/>
                        <a:column name="interim_rental_tax" footerRenderer="rental_pay_caculateTotal" prompt="租前息税额" renderer="Leaf.formatMoney" width="100"/>
                        <!-- <a:column name="period_income" prompt="当期收益" renderer="con509_render_contractMaintainDs_grid" width="100"/> -->
                    </a:columns>
                    <a:editors>
                        <a:datePicker id="con509_interim_rental_pay_grid_dp"/>
                        <a:numberField id="con509_interim_rental_pay_grid_nf"/>
                    </a:editors>
                </a:grid>
            </a:hBox>
        </a:screenBody>
        <script><![CDATA[
          execute();
        ]]></script>
    </a:view>
</a:screen>
