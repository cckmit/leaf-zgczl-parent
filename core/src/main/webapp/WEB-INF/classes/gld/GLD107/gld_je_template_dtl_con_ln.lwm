<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: DJ  
    $Date: 2013-5-21 下午4:06:55  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:o="aurora.database.local.oracle" xmlns:bm="http://www.aurora-framework.org/schema/bm" xmlns:f="aurora.database.features" alias="t1" baseTable="GLD_JE_TEMPLATE_DTL_CON_LN">
    <bm:fields>
        <bm:field name="config_id" databaseType="NUMBER" datatype="java.lang.Long" physicalName="CONFIG_ID"/>
        <bm:field name="config_line_id" databaseType="NUMBER" datatype="java.lang.Long" physicalName="CONFIG_LINE_ID"/>
        <bm:field name="condition_table" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="CONDITION_TABLE"/>
        <bm:field name="condition_column" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="CONDITION_COLUMN"/>
        <bm:field name="calulate_symbol" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="CALULATE_SYMBOL"/>
        <bm:field name="condition_value_type" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="CONDITION_VALUE_TYPE"/>
        <bm:field name="condition_value" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="CONDITION_VALUE"/>
        <bm:field name="condition_table_desc" forInsert="false" forUpdate="false"/>
        <bm:field name="condition_column_desc" forInsert="false" forUpdate="false"/>
    </bm:fields>
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
    			  SELECT t1.config_line_id,
				         t1.config_id,
				         t1.CONDITION_TABLE,
				         t1.CONDITION_COLUMN,
				         t1.CALULATE_SYMBOL,
				         t1.CONDITION_VALUE_TYPE,
				         t1.CONDITION_VALUE,
				         col.TABLE_DESC          AS condition_table_desc,
				         col.COLUMN_DESC         AS condition_column_desc
				    FROM GLD_JE_TEMPLATE_DTL_CON_LN t1, GLD_JE_TRX_TAB_COLUMNS_V col
				   where t1.config_id=${@config_id}
				   	 and col.je_transaction_code(+) = ${@je_transaction_code}
				     and col.table_name(+) = t1.condition_table
				     and col.table_column(+) = t1.condition_column
				   order by t1.CONDITION_TABLE,t1.CONDITION_COLUMN
    		]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="insert">
            <bm:parameters>
                <bm:parameter name="config_line_id" input="false" output="true" outputPath="@config_line_id"/>
                <bm:parameter name="config_id" input="false" output="true" outputPath="@config_id"/>
            </bm:parameters>
            <bm:update-sql><![CDATA[
            	begin
						${@config_id}:=${../../@config_id};
					   GLD104_SAVE_PKG.configWhere_manage(p_sql_type             => 'INSERT',
				   													  p_config_id            => ${../../@config_id},
														              p_config_line_id       => ${@config_line_id},
														              p_condition_table      => ${@condition_table},
														              p_condition_column     => ${@condition_column},
														              p_calulate_symbol      => ${@calulate_symbol},
														              p_condition_value_type => ${@condition_value_type},
														              p_condition_value      => ${@condition_value},
														              p_user_id              => ${/session/@user_id});
				              
				end;
            	
    		]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
            	begin
				
				 	   GLD104_SAVE_PKG.configWhere_manage(p_sql_type             => 'UPDATE',
				   													  p_config_id            => ${@config_id},
														              p_config_line_id       => ${@config_line_id},
														              p_condition_table      => ${@condition_table},
														              p_condition_column     => ${@condition_column},
														              p_calulate_symbol      => ${@calulate_symbol},
														              p_condition_value_type => ${@condition_value_type},
														              p_condition_value      => ${@condition_value},
														              p_user_id              => ${/session/@user_id});
				end;
    		]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="delete">
            <bm:update-sql><![CDATA[
            	begin
				
				 	   GLD104_SAVE_PKG.configWhere_manage(p_sql_type             => 'DELETE',
				   													  p_config_id            => ${@config_id},
														              p_config_line_id       => ${@config_line_id},
														              p_condition_table      => ${@condition_table},
														              p_condition_column     => ${@condition_column},
														              p_calulate_symbol      => ${@calulate_symbol},
														              p_condition_value_type => ${@condition_value_type},
														              p_condition_value      => ${@condition_value},
														              p_user_id              => ${/session/@user_id});
				end;
    		]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:features>
        <f:standard-who/>
        <o:sequence-pk/>
    </bm:features>
    <bm:primary-key>
        <bm:pk-field name="config_line_id"/>
    </bm:primary-key>
</bm:model>
