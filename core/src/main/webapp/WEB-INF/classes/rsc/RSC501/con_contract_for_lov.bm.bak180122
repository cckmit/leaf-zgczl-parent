<?xml version="1.0" encoding="UTF-8"?>
<ns1:model xmlns:s="leaf.plugin.script" xmlns:ns1="http://www.leaf-framework.org/schema/bm" alias="t1" extend="rsc.RSC501.con_contract" extendMode="reference" needAccessControl="false">
    <ns1:fields>
        <ns1:field name="contract_id"/>
        <ns1:field name="project_id"/>
        <ns1:field name="business_type"/>
        <ns1:field name="data_class"/>
        <ns1:field name="bp_id_tenant"/>
        <ns1:field name="contract_status"/>
        <ns1:field name="contract_number" forDisplay="true" forQuery="true" prompt="HLS.CONTRACT_NUMBER"/>
        <ns1:field name="contract_name" forDisplay="true" forQuery="true" prompt="HLS.CONTRACT_NAME"/>
        <ns1:field name="project_name" forDisplay="true" forQuery="true" prompt="HLS.PROJECT_NAME"/>
        <ns1:field name="project_number" forDisplay="true" forQuery="true" prompt="HLS.PROJECT_NUMBER"/>
        <ns1:field name="currency"/>
        <ns1:field name="currency_desc"/>
        <ns1:field name="employee_name"/>
    </ns1:fields>
    <ns1:features>
        <s:bm-script><![CDATA[
        	var cx = Packages.leaf.javascript.Context.getCurrentContext();
        	Packages.leaf.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "aut_authority_bm_validate.js");
    	]]></s:bm-script>
    </ns1:features>
    <ns1:query-fields>
        <ns1:query-field field="contract_number" queryOperator="like"/>
        <ns1:query-field field="project_number" queryOperator="like"/>
        <ns1:query-field field="project_name" queryOperator="like"/>
        <ns1:query-field field="contract_name" queryOperator="like"/>
        <ns1:query-field name="aut_flag" queryExpression="${@aut_flag} = &apos;Y&apos; and ( exists         (select 1            from aut_trx_user_authorize a1, aut_owner_user_authorize a2           where a1.trx_category = &apos;CONTRACT&apos;             and a1.trx_id = t1.contract_id             and trunc(sysdate) between a1.start_date and                 nvl(a1.end_date, trunc(sysdate))             and a1.user_id = a2.owner_user_id             and a1.trx_category = a2.trx_category             and a2.authorized_user_id = ${/session/@user_id}             and trunc(sysdate) between a2.start_date and                 nvl(a2.end_date, trunc(sysdate))))"/>
        <ns1:query-field name="legal_filter" queryExpression="exists(select 1 from con_contract c where c.contract_id = t1.contract_id and c.history_employee_id is not null)"/>
    </ns1:query-fields>
    <ns1:data-filters>
        <ns1:data-filter name="data_class" expression="t1.data_class=&apos;NORMAL&apos;"/>
        <ns1:data-filter name="contract_status" expression="t1.contract_status in(&apos;INCEPT&apos;)"/>
    </ns1:data-filters>
</ns1:model>
