<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: Harry  
    $Date: 2018-2-24 下午3:36:23  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    t1.bp_id,
                    t1.bp_name,
                    t1.bp_code,
                    t1.extra_nam,
                    t1.position,
                    'GUARANTOR' bp_category,
                    (SELECT
                        bc.description
                    FROM
                        hls_bp_category bc
                    WHERE
                        bc.bp_category = 'GUARANTOR'
                    ) AS bp_category_n,
                    'GUTA_ORG' bp_type,
                    (SELECT bt.description FROM hls_bp_type bt WHERE bt.bp_type = 'GUTA_ORG'
                    ) AS bp_type_n,
                    t1.bp_class,
                    (SELECT
                        v.code_value_name
                    FROM
                        sys_code_values_v v
                    WHERE
                        v.code       = 'HLS211_BP_CLASS' AND
                        v.code_value = t1.bp_class
                    ) AS bp_class_n
                FROM
                    hls_bp_master t1 #WHERE_CLAUSE#
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
                DECLARE
                    v_bp_seq NUMBER;
                BEGIN
                    UPDATE
                        prj_project p
                    SET
                        p.number_of_guarantor =
                        (SELECT
                            COUNT(*)
                        FROM
                            prj_project_bp t
                        WHERE
                            t.bp_category = 'GUARANTOR' AND
                            t.project_id  = ${@project_id}
                        )
                    WHERE
                        p.project_id = ${@project_id};
                    FOR rec         IN
                    (SELECT
                        *
                    FROM
                        prj_project_bp bp
                    WHERE
                        bp.bp_seq    IS NULL AND
                        bp.project_id = ${@project_id}
                    )
                    LOOP
                        SELECT
                            MAX(b.bp_seq)
                        INTO
                            v_bp_seq
                        FROM
                            prj_project_bp b
                        WHERE
                            b.project_id = ${@project_id};
                            
                        UPDATE
                            prj_project_bp pb
                        SET
                            pb.bp_seq = v_bp_seq+1
                        WHERE
                            pb.prj_bp_id = rec.prj_bp_id;
                            
                    END LOOP;
                END;
            ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:fields>
        <bm:field name="bp_id"/>
        <bm:field name="bp_category"/>
        <bm:field name="bp_category_n" forInsert="false" forUpdate="false"/>
        <bm:field name="bp_type"/>
        <bm:field name="bp_type_n" forInsert="false" forUpdate="false"/>
        <bm:field name="bp_code" databaseType="VARCHAR2" datatype="java.lang.String" displayWidth="100" forDisplay="true" forQuery="true" physicalName="BP_CODE" prompt="HLS.BP_CODE"/>
        <bm:field name="bp_name" databaseType="VARCHAR2" datatype="java.lang.String" displayWidth="368" forDisplay="true" forQuery="true" physicalName="BP_NAME" prompt="HLS.BP_NAME"/>
    </bm:fields>
    <bm:query-fields>
        <bm:query-field name="bp_code" queryExpression="t1.bp_code like &apos;%&apos;||${@bp_code}||&apos;%&apos;"/>
        <bm:query-field name="bp_name" queryExpression="t1.bp_name like &apos;%&apos;||${@bp_name}||&apos;%&apos;"/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter name="filter" expression="((t1.bp_category = &apos;GUARANTOR&apos;) or exists (select 1 from hls_bp_master_role r where r.bp_id = t1.bp_id and t1.bp_category = &apos;TENANT&apos; and r.bp_category = &apos;GUARANTOR&apos;)) and t1.bp_class = &apos;ORG&apos;"/>
        <bm:data-filter name="authory" expression="exists (select 1 from aut_trx_user_authorize a1, aut_owner_user_authorize a2 where a1.trx_category = &apos;BP&apos; and a1.trx_id = t1.bp_id and trunc(sysdate) between a1.start_date and nvl(a1.end_date, trunc(sysdate)) and a1.user_id = a2.owner_user_id and a1.trx_category = a2.trx_category and a2.authorized_user_id = ${/session/@user_id} and trunc(sysdate) between a2.start_date and nvl(a2.end_date, trunc(sysdate)))"/>
    </bm:data-filters>
</bm:model>
