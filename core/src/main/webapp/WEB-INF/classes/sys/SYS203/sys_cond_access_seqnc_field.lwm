<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: LR  
    $Date: 2013-8-1 下午03:17:11  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm" xmlns:f="aurora.database.features" alias="t1" baseTable="SYS_COND_ACCESS_SEQNC_FIELD" defaultOrderBy="layout_priority,condition_field">
    <bm:fields>
        <bm:field name="access_sequence" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="ACCESS_SEQUENCE" prompt="SYS203.SYS_COND_ACCESS_SEQNC_FIELD.ACCESS_SEQUENCE"/>
        <bm:field name="access_number" databaseType="NUMBER" datatype="java.lang.Long" physicalName="ACCESS_NUMBER" prompt="SYS203.SYS_COND_ACCESS_SEQNC_FIELD.ACCESS_NUMBER"/>
        <bm:field name="condition_field" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="CONDITION_FIELD" prompt="SYS203.SYS_COND_ACCESS_SEQNC_FIELD.CONDITION_FIELD"/>
        <bm:field name="layout_priority" databaseType="NUMBER" datatype="java.lang.Long" physicalName="LAYOUT_PRIORITY" prompt="SYS203.SYS_COND_ACCESS_SEQNC_FIELD.LAYOUT_PRIORITY"/>
        <bm:field name="value_source" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="VALUE_SOURCE" prompt="SYS203.SYS_COND_ACCESS_SEQNC_FIELD.VALUE_SOURCE"/>
        <bm:field name="initial_value_allowed" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="INITIAL_VALUE_ALLOWED" prompt="SYS203.SYS_COND_ACCESS_SEQNC_FIELD.INITIAL_VALUE_ALLOWED"/>
        <bm:field name="field_type" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="FIELD_TYPE" prompt="SYS203.SYS_COND_ACCESS_SEQNC_FIELD.FIELD_TYPE"/>
        <bm:field name="priority" databaseType="NUMBER" datatype="java.lang.Long" physicalName="PRIORITY" prompt="SYS203.SYS_COND_ACCESS_SEQNC_FIELD.PRIORITY"/>
        <bm:field name="field_type_desc" expression="(select s.code_value_name from sys_code_values_v s where s.code=&apos;SYS_ACCESS_SEQ_FIELD_TYPE&apos; and s.code_value=t1.field_type)" forInsert="false" forUpdate="false"/>
        <bm:field name="key_field" expression="(select stf.key_field   from sys_condition_table_field stf, sys_cond_access_sequence_ln l  where stf.condition_field = t1.condition_field    and l.access_sequence = t1.access_sequence    and l.access_number = t1.access_number    and l.condition_table = stf.condition_table )" forInsert="false" forUpdate="false"/>
    </bm:fields>
    <bm:features>
        <f:standard-who/>
    </bm:features>
    <bm:primary-key>
        <bm:pk-field name="access_number"/>
        <bm:pk-field name="access_sequence"/>
        <bm:pk-field name="condition_field"/>
    </bm:primary-key>
    <bm:relations>
        <bm:relation name="ref1" joinType="LEFT OUTER" refAlias="scaf" refModel="sys.SYS200.sys_condition_allowed_field">
            <bm:reference foreignField="condition_field" localField="condition_field"/>
        </bm:relation>
    </bm:relations>
    <bm:ref-fields>
        <bm:ref-field name="condition_field_name" relationName="ref1" sourceField="description"/>
    </bm:ref-fields>
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    t1.ACCESS_SEQUENCE,
                    t1.ACCESS_NUMBER,
                    t1.CONDITION_FIELD,
                    t1.LAYOUT_PRIORITY,
                    t1.VALUE_SOURCE,
                    t1.INITIAL_VALUE_ALLOWED,
                    t1.FIELD_TYPE,
                    t1.PRIORITY,
                    (SELECT
                        s.code_value_name
                    FROM
                        sys_code_values_v s
                    WHERE
                        s.code      ='SYS_ACCESS_SEQ_FIELD_TYPE' AND
                        s.code_value=t1.field_type
                    ) AS field_type_desc,
                    stf.key_field,
                    scaf.DESCRIPTION AS condition_field_name
                FROM
                    SYS_COND_ACCESS_SEQNC_FIELD t1
                LEFT OUTER JOIN SYS_CONDITION_ALLOWED_FIELD scaf
                ON
                    t1.CONDITION_FIELD = scaf.CONDITION_FIELD,
                    sys_condition_table_field stf,
                    sys_cond_access_sequence_ln l #WHERE_CLAUSE#
                ORDER BY
                    stf.key_field DESC,
                    t1.layout_priority
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="execute">
            <bm:update-sql><![CDATA[
        		BEGIN
        		    UPDATE
        		        SYS_COND_ACCESS_SEQUENCE_LN l
        		    SET
        		        l.free_key_exist = 'Y'
        		    WHERE
        		        l.access_sequence = ${@access_sequence} AND
        		        l.access_number   = ${@access_number} AND
        		        EXISTS
        		        (SELECT
        		            1
        		        FROM
        		            SYS_COND_ACCESS_SEQNC_FIELD f
        		        WHERE
        		            f.access_sequence = ${@access_sequence} AND
        		            f.access_number   = ${@access_number} AND
        		            f.field_type      = 'FREE_KEY'
        		        );
        		    UPDATE
        		        SYS_COND_ACCESS_SEQUENCE_LN l
        		    SET
        		        l.free_key_exist = 'N'
        		    WHERE
        		        l.access_sequence = ${@access_sequence} AND
        		        l.access_number   = ${@access_number} AND
        		        NOT EXISTS
        		        (SELECT
        		            1
        		        FROM
        		            SYS_COND_ACCESS_SEQNC_FIELD f
        		        WHERE
        		            f.access_sequence = ${@access_sequence} AND
        		            f.access_number   = ${@access_number} AND
        		            f.field_type      = 'FREE_KEY'
        		        );
        		END;
    		]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field field="access_sequence" queryExpression="t1.access_sequence=${@access_sequence}"/>
        <bm:query-field field="access_number" queryExpression="t1.access_number=${@access_number}"/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter enforceOperations="query" expression="stf.condition_field = t1.condition_field AND l.access_sequence   = t1.access_sequence AND l.access_number = t1.access_number AND l.condition_table = stf.condition_table"/>
    </bm:data-filters>
</bm:model>
